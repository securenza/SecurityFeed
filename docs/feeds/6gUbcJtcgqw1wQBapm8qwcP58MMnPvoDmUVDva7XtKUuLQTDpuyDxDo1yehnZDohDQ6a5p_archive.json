{"id":"6gUbcJtcgqw1wQBapm8qwcP58MMnPvoDmUVDva7XtKUuLQTDpuyDxDo1yehnZDohDQ6a5p","title":"Slashdot: Developers","displayTitle":"Dev - Slashdot - Dev","url":"http://rss.slashdot.org/Slashdot/slashdotDevelopers","feedLink":"https://developers.slashdot.org/","isQuery":false,"isEmpty":false,"isHidden":false,"itemCount":6,"items":[{"title":"JPMorgan Engineers' Efficiency Jumps as Much as 20% From Using Coding Assistant","url":"https://developers.slashdot.org/story/25/03/14/2020232/jpmorgan-engineers-efficiency-jumps-as-much-as-20-from-using-coding-assistant?utm_source=rss1.0mainlinkanon&utm_medium=feed","date":1741983600,"author":"msmash","guid":190,"unread":true,"content":"Tens of thousands of JPMorgan Chase software engineers increased their productivity 10% to 20% by using a coding assistant tool developed by the bank, its global chief information officer Lori Beer said. From a report: The gains present \"a great opportunity\" for the lender to assign its engineers to other projects, Beer told Reuters ahead of DevUp, an internal conference hosted by JPMorgan, bringing together its top engineers in India this year. The largest lender in the U.S. had a technology budget of $17 billion for 2024. Its tech workforce of 63,000 employees, with a third of them based in India, represents about 21% of its global headcount. The efficiency gains from the coding assistant will also allow JPMorgan's engineers to devote more time to high-value projects focusing on artificial intelligence and data, Beer said.","contentLength":836,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"AI Coding Assistant Refuses To Write Code, Tells User To Learn Programming Instead","url":"https://developers.slashdot.org/story/25/03/13/2349245/ai-coding-assistant-refuses-to-write-code-tells-user-to-learn-programming-instead?utm_source=rss1.0mainlinkanon&utm_medium=feed","date":1741957200,"author":"BeauHD","guid":189,"unread":true,"content":"An anonymous reader quotes a report from Ars Technica: On Saturday, a developer using Cursor AI for a racing game project hit an unexpected roadblock when the programming assistant abruptly refused to continue generating code, instead offering some unsolicited career advice. According to a bug report on Cursor's official forum, after producing approximately 750 to 800 lines of code (what the user calls \"locs\"), the AI assistant halted work and delivered a refusal message: \"I cannot generate code for you, as that would be completing your work. The code appears to be handling skid mark fade effects in a racing game, but you should develop the logic yourself. This ensures you understand the system and can maintain it properly.\"\n \nThe AI didn't stop at merely refusing -- it offered a paternalistic justification for its decision, stating that \"Generating code for others can lead to dependency and reduced learning opportunities.\" [...] The developer who encountered this refusal, posting under the username \"janswist,\" expressed frustration at hitting this limitation after \"just 1h of vibe coding\" with the Pro Trial version. \"Not sure if LLMs know what they are for (lol), but doesn't matter as much as a fact that I can't go through 800 locs,\" the developer wrote. \"Anyone had similar issue? It's really limiting at this point and I got here after just 1h of vibe coding.\" One forum member replied, \"never saw something like that, i have 3 files with 1500+ loc in my codebase (still waiting for a refactoring) and never experienced such thing.\"\n \nCursor AI's abrupt refusal represents an ironic twist in the rise of \"vibe coding\" -- a term coined by Andrej Karpathy that describes when developers use AI tools to generate code based on natural language descriptions without fully understanding how it works. While vibe coding prioritizes speed and experimentation by having users simply describe what they want and accept AI suggestions, Cursor's philosophical pushback seems to directly challenge the effortless \"vibes-based\" workflow its users have come to expect from modern AI coding assistants.","contentLength":2110,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"IBM CEO Doesn't Think AI Will Replace Programmers Anytime Soon","url":"https://developers.slashdot.org/story/25/03/12/1448242/ibm-ceo-doesnt-think-ai-will-replace-programmers-anytime-soon?utm_source=rss1.0mainlinkanon&utm_medium=feed","date":1741795200,"author":"msmash","guid":188,"unread":true,"content":"IBM CEO Arvind Krishna has publicly disagreed with Anthropic CEO Dario Amodei's prediction that AI will write 90% of code within 3-6 months, estimating instead that only \"20-30% of code could get written by AI.\" \n\n\"Are there some really simple use cases? Yes, but there's an equally complicated number of ones where it's going to be zero,\" Krishna said during an onstage interview at SXSW. He argued AI will boost programmer productivity rather than eliminate jobs. \"If you can do 30% more code with the same number of people, are you going to get more code written or less?\" he asked. \"History has shown that the most productive company gains market share, and then you can produce more products.\"","contentLength":698,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"OpenAI Pushes AI Agent Capabilities With New Developer API","url":"https://developers.slashdot.org/story/25/03/11/2154229/openai-pushes-ai-agent-capabilities-with-new-developer-api?utm_source=rss1.0mainlinkanon&utm_medium=feed","date":1741750200,"author":"BeauHD","guid":187,"unread":true,"content":"An anonymous reader quotes a report from Ars Technica: On Tuesday, OpenAI unveiled a new \"Responses API\" designed to help software developers create AI agents that can perform tasks independently using the company's AI models. The Responses API will eventually replace the current Assistants API, which OpenAI plans to retire in the first half of 2026. With the new offering, users can develop custom AI agents that scan company files with a file search utility that rapidly checks company databases (with OpenAI promising not to train its models on these files) and navigate websites -- similar to functions available through OpenAI's Operator agent, whose underlying Computer-Using Agent (CUA) model developers can also access to enable automation of tasks like data entry and other operations.\n \nHowever, OpenAI acknowledges that its CUA model is not yet reliable for automating tasks on operating systems and can make unintended mistakes. The company describes the new API as an early iteration that it will continue to improve over time. Developers using the Responses API can access the same models that power ChatGPT Search: GPT-4o search and GPT-4o mini search. These models can browse the web to answer questions and cite sources in their responses. That's notable because OpenAI says the added web search ability dramatically improves the factual accuracy of its AI models. On OpenAI's SimpleQA benchmark, which aims to measure confabulation rate, GPT-4o search scored 90 percent, while GPT-4o mini search achieved 88 percent -- both substantially outperforming the larger GPT-4.5 model without search, which scored 63 percent.\n \nDespite these improvements, the technology still has significant limitations. Aside from issues with CUA properly navigating websites, the improved search capability doesn't completely solve the problem of AI confabulations, with GPT-4o search still making factual mistakes 10 percent of the time. Alongside the Responses API, OpenAI released the open source Agents SDK, providing developers free tools to integrate models with internal systems, implement safeguards, and monitor agent activities. This toolkit follows OpenAI's earlier release of Swarm, a framework for orchestrating multiple agents.","contentLength":2240,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"Developer Convicted For 'Kill Switch' Code Activated Upon His Termination","url":"https://developers.slashdot.org/story/25/03/10/1921202/developer-convicted-for-kill-switch-code-activated-upon-his-termination?utm_source=rss1.0mainlinkanon&utm_medium=feed","date":1741635000,"author":"msmash","guid":186,"unread":true,"content":"A 55-year-old software developer faces up to 10 years in prison after being convicted for deploying malicious code that sabotaged his former employer's network, causing hundreds of thousands of dollars in losses. \n\nDavis Lu was convicted by a jury for causing intentional damage to protected computers owned by power management company Eaton Corp., the US Department of Justice announced Friday. Lu, who worked at Eaton for 11 years, became disgruntled after a 2018 corporate \"realignment\" reduced his responsibilities. \n\nHe created malicious code that deleted coworker profile files, prevented logins, and caused system crashes. His most destructive creation was a \"kill switch\" named \"IsDLEnabledinAD\" that automatically activated upon his termination in 2019, disrupting Eaton's global operations. Lu admitted to creating some malicious code but plans to appeal the verdict.","contentLength":877,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"Adafruit Successfully Automates Arduino Development Using 'Claude Code' LLM","url":"https://hardware.slashdot.org/story/25/03/10/0054257/adafruit-successfully-automates-arduino-development-using-claude-code-llm?utm_source=rss1.0mainlinkanon&utm_medium=feed","date":1741568340,"author":"EditorDavid","guid":185,"unread":true,"content":"Adafruit Industries used large language model (LLM) tool Claude Code to streamline hardware development, writes managing director ptorrone. \n\nIn a demo video Limor 'Ladyada' Fried compares the LLM's command-line interface to working with the build-automation tool CMake or \"a weird cross between IRC and a BBS.\" The first step was converting a PDF of the hardware's datasheet into text, and Claude Code first displays the appropriate Bash command, while asking \"Do you want to proceed?\" (\"What's nice is that it doesn't make changes, even though it has write access to files in the directory...\") Eventually from the data sheet it creates things like an accurate register map, C++ headers, and even license text — and more. \n\n\"We are using it to automate parts of the coding and debugging process for an Arduino-compatible Metro Mini board with an OPT 4048 color sensor,\" writes ptorrone:\nUsing Claude Code's shell access, we can compile, upload, and test code in a semi-automated workflow, allowing the LLM to suggest fixes for errors along the way... While the AI isn't perfect for high-level driver development, it's proving VERY useful for tedious debugging and super-fast iterative improvements, bringing hardware automation closer to ...reality. \nIn the video Fried describes it like this. \"I have a full debugging cycle, where I'm there — I'm like driving the car — but I have this copilot that's telling me where to go...\" \n\n\"I feel like I'm getting closer to having a semi-automated way of doing driver development.\"","contentLength":1531,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null}],"tags":["dev","slashdot"]}