{"id":"46aP2QbqUqBrWfYqAibo8xS24qkvbDNgWZUrxgZ6XNcyUn6fFxkgS1aSWJWwPwaqFp34erWr8NxVvd6jro8uiaPvDUjw","title":"top scoring links : kubernetes","displayTitle":"Reddit - Kubernetes","url":"https://www.reddit.com/r/kubernetes/top/.rss?sort=top&t=day&limit=6","feedLink":"https://www.reddit.com/r/kubernetes/top/?sort=top&t=day&limit=6","isQuery":false,"isEmpty":false,"isHidden":false,"itemCount":6,"items":[{"title":"For those managing or working with multiple clusters, do you use a combined kubeconfig file or separate by cluster?","url":"https://www.reddit.com/r/kubernetes/comments/1ipg99n/for_those_managing_or_working_with_multiple/","date":1739555053,"author":"/u/trouphaz","guid":614,"unread":true,"content":"<p>I wonder if I'm in the minority. I have been keeping my kubeconfigs separate per cluster for years while I know others that combine everything to a single file. I started doing this because I didn't fully grasp yaml when I started and when I had an issue with the kubeconfig, I didn't have any idea on how to repair it. So I'd have to fully recreate it.</p><p>So, each cluster has its own kubeconfig file named for the cluster's name and I have a function that'll set my KUBECONFIG variable to the file using the cluster name.</p><pre><code>sc() { CLUSTER_NAME=\"${1}\" export KUBECONFIG=\"~/.kube/${CLUSTER_NAME}\" } </code></pre>","contentLength":592,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"Learn from Documentation or Book?","url":"https://www.reddit.com/r/kubernetes/comments/1ip8d2r/learn_from_documentation_or_book/","date":1739531824,"author":"/u/nicholle_marvel","guid":613,"unread":true,"content":"<p>In 2025, there are numerous books available on Kubernetes, each addressing various scenarios. These books offer solutions to real-world problems and cover a wide range of topics related to Kubernetes.</p><p>On the other hand, there is also very detailed official documentation available.</p><p>Is it worth reading the entire documentation to learn Kubernetes, or should one follow a book instead?</p><p>Two follow-up points to consider: 1. Depending on specific needs, one might visit particular chapters of the official documentation. 2. Books often introduce additional tools to solve certain problems, such as monitoring tools and CI/CD tools.</p><p>Please note that the goal is not certification but rather gaining comprehensive knowledge that will be beneficial during interviews and in real-world situations.</p>","contentLength":786,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"How am I just finding out about the OhMyZsh plugin?","url":"https://github.com/ohmyzsh/ohmyzsh/tree/master/plugins/kubectl","date":1739526964,"author":"/u/ominouspotato","guid":617,"unread":true,"content":"<p>It’s literally just a bunch of aliases but it has made CLI ops so much easier. Still on my way to memorizing them all, but changing namespace contexts and exec-ing to containers has never been easier. Highly recommend if you’re a k8s operator! </p><p>Would also love to hear what you all use in your day-to-day. My company is looking into GUI tools like Lens but they haven’t bought licenses yet. </p>","contentLength":396,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":"https://www.reddit.com/r/kubernetes/comments/1ip78yb/how_am_i_just_finding_out_about_the_ohmyzsh_plugin/"},{"title":"Advancing Open Source Gateways with kgateway","url":"https://www.cncf.io/blog/2025/02/05/advancing-open-source-gateways-with-kgateway/","date":1739520627,"author":"/u/dshurupov","guid":612,"unread":true,"content":"<div><p>Posted on February 5, 2025\n\t\t</p></div><p>At KubeCon NA 2024, <a href=\"https://www.youtube.com/watch?v=psZi_T1np4U\">Solo.io announced its intention</a> to donate the <a href=\"https://github.com/solo-io/gloo\">Gloo Gateway open source project</a> to the CNCF, to benefit the broader cloud native ecosystem. In case you are not familiar with Gloo Gateway, it is the most mature and widely deployed Envoy-based gateway in the market today. Built on open source and open standards, Gloo Gateway is Kubernetes-native and implements the Kubernetes Gateway API. Today, we’d like to update you on some exciting developments since the announcement.</p><h2>What is a gateway, and why donate Gloo Gateway to CNCF?</h2><p>If you are using Kubernetes, you most likely need a gateway to control traffic going into or out of your cluster. Gateways are a critical component of the Kubernetes ecosystem, which is why the Kubernetes community collectively developed the <a href=\"https://gateway-api.sigs.k8s.io/\">Gateway API</a> based on lessons learned from the Ingress API and Istio. With the growth of AI workloads and the rising need for traffic and cost control for calling LLM providers, gateways play an even more critical role in controlling and securing all-direction traffic—north-south, east-west, or inter-service communication.</p><p>While Gloo Gateway is the most mature and feature-rich Envoy-based gateway today, we believe that under vendor-neutral governance, the project’s adoption and ecosystem integration will reach new heights. Donating the project to the CNCF will expand the contributor base, foster innovation across organizations, and provide a battle-tested, feature-rich, vendor-neutral gateway project to the diverse global CNCF user community.</p><p>In November 2024, we moved the Gloo open source repository to the k8sgateway repository as a preparatory step for the donation. After working with the CNCF TOC, Kubernetes SIG-Network, and steering committee leaders, we renamed the project to <a href=\"https://kgateway.dev/\">kgateway</a>.</p><p>Given Gloo’s large adopter base, we believe kgateway qualifies as a CNCF incubation project. Due to the lengthy due diligence process for incubation projects, we decided to <a href=\"https://github.com/cncf/sandbox/issues/319\">donate it as a CNCF sandbox project</a> instead. We look forward to working with the CNCF TOC and TAG Network leaders for the upcoming sandbox review.</p><p>Working closely with the maintainer community, we established governance for the project that rewards maintainership while ensuring no single company has a controlling stake. Using the git-vote bot for transparency, we successfully held our first governance vote. Out of 10 eligible voters (including 4 maintainers outside Solo.io), nine voted favorably on the <a href=\"https://github.com/kgateway-dev/community/pull/19\">proposed governance PR</a>:</p><p>In addition to renaming the project, recruiting maintainers, and establishing governance, we’ve been focused on:</p><ol><li> Developing buildable, vendor-neutral artifacts, set to launch in the coming weeks.</li><li><strong>Improved Development Velocity:</strong> Establishing robust pipeline checks for PRs, including linting, Kubernetes Gateway API conformance tests, and end-to-end testing.</li><li> Ensuring the project remains highly extendable, aligning with core design principles of kgateway and Envoy.</li></ol><p>A shout-out to our core maintainers and contributors for laying this solid foundation for innovation.</p><p>You may notice that the Gloo open source repository still exists. This is temporary during the transition period. With Gloo’s large open source user base, we understand that migrating from Gloo to kgateway takes time. In upcoming releases, we plan to deprecate the Gloo repository to focus all open-source efforts on kgateway.</p><p>We aim to make kgateway the most popular gateway for all-direction traffic—north-south, east-west, or inter-service communication. In addition to implementing the latest Kubernetes Gateway API features, we’re prioritizing:</p><h3>Traffic control for AI workloads</h3><p>As workloads like AI agents run on Kubernetes clusters, questions arise:</p><ul><li>How securely do they connect to LLM services such as OpenAI or Gemini?</li><li>Are these services local or external, with usage-based costs?</li><li>How should credentials and backup LLMs be managed?</li><li>Do you want each developer to develop prompt guard and enrichment in their own AI workloads?&nbsp;</li></ul><p>Kgateway simplifies these challenges with two proposed declarative APIs for routing traffic to LLM providers while applying advanced policies such as secret management, backup LLMs, prompt guard or enrichment, and more. Refer to <a href=\"https://github.com/kgateway-dev/kgateway/pull/10495/files\">the enhancement proposal</a> for more information.</p><p>The <a href=\"https://gateway-api-inference-extension.sigs.k8s.io/\">Gateway API Inference extension</a>, sponsored by Kubernetes SIG-Network, focuses on extending the Kubernetes Gateway API with inference-specific routing extensions. It introduces the concept of an “InferencePool” (composed of one or more inference pods), enabling application developers to effectively route requests based on AI workload requirements. Daneyon Hanson has been leading our <a href=\"https://github.com/kgateway-dev/kgateway/pull/10420\">work</a> for interference extensions and we are proud to see him nominated as a maintainer on the Gateway API Inference extension project as a result!</p><h3>Providing advanced Layer 7 features for Istio in ambient mode</h3><p>Ambient mode splits Istio functionality into a secure overlay layer (ztunnels) and a Layer 7 processing layer (waypoint). With kgateway as the waypoint proxy, users gain advanced L7 features such as request transformation, retries, and traffic control for AI workloads connecting to LLM services. This pluggability ensures consistent operational experiences for north-south and inter-service traffic. Steven Landow, who is a maintainer on both Istio and kgateway, is leading <a href=\"https://github.com/kgateway-dev/kgateway/issues/10453\">this effort</a>.</p><p>To explore additional roadmap initiatives or propose updates, please refer to our <a href=\"https://github.com/kgateway-dev/community/blob/main/ROADMAP.md\">roadmap document</a>.</p><p>Are you interested in exploring kgateway, or are you already a Gloo Gateway user? We’d love to hear from you and shape the future of kgateway together. If working on cutting-edge cloud-native projects excites you, join us as a contributor! Connect with us via:</p><p>Let’s work together and build kgateway into the future of cloud connectivity!</p>","contentLength":5832,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":"https://www.reddit.com/r/kubernetes/comments/1ip5uvx/advancing_open_source_gateways_with_kgateway/"},{"title":"An argument for how Kubernetes can be use in development and reduce overall system complexity.","url":"https://youtu.be/EJrw3z7m5iQ?si=D4BhYdkGryByoIVj","date":1739512799,"author":"/u/purton_i","guid":616,"unread":true,"content":"<!DOCTYPE html>","contentLength":0,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":"https://www.reddit.com/r/kubernetes/comments/1ip4045/an_argument_for_how_kubernetes_can_be_use_in/"},{"title":"Job roles related to Kubernetes/OpenShift","url":"https://www.reddit.com/r/kubernetes/comments/1ip0j60/job_roles_related_to_kubernetesopenshift/","date":1739500784,"author":"/u/UCONN_throwaway_99","guid":615,"unread":true,"content":"<p>I was given the opportunity to do a POC for my team to migrate our app onto containers, and we support OpenShift. I really enjoyed the migration part of it and learning about OpenShift/containerization. Would anyone know what kind of job role I should be searching for related to this work?</p>","contentLength":290,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null}],"tags":["dev","reddit","k8s"]}